// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: proto/v1/node.proto

package nodev1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	structpb "google.golang.org/protobuf/types/known/structpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Node-specific initialization with P2P config
type InitializeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Config        *NodeConfig            `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
	InstanceId    string                 `protobuf:"bytes,2,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InitializeRequest) Reset() {
	*x = InitializeRequest{}
	mi := &file_proto_v1_node_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InitializeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitializeRequest) ProtoMessage() {}

func (x *InitializeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_node_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitializeRequest.ProtoReflect.Descriptor instead.
func (*InitializeRequest) Descriptor() ([]byte, []int) {
	return file_proto_v1_node_proto_rawDescGZIP(), []int{0}
}

func (x *InitializeRequest) GetConfig() *NodeConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *InitializeRequest) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

type NodeConfig struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	NodeId            string                 `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	P2PPort           int32                  `protobuf:"varint,2,opt,name=p2p_port,json=p2pPort,proto3" json:"p2p_port,omitempty"`
	ListenAddresses   []string               `protobuf:"bytes,3,rep,name=listen_addresses,json=listenAddresses,proto3" json:"listen_addresses,omitempty"`
	BootstrapPeers    []string               `protobuf:"bytes,4,rep,name=bootstrap_peers,json=bootstrapPeers,proto3" json:"bootstrap_peers,omitempty"`
	EnableDiscovery   bool                   `protobuf:"varint,5,opt,name=enable_discovery,json=enableDiscovery,proto3" json:"enable_discovery,omitempty"`
	DiscoveryMethod   string                 `protobuf:"bytes,6,opt,name=discovery_method,json=discoveryMethod,proto3" json:"discovery_method,omitempty"`
	MaxPeers          int32                  `protobuf:"varint,7,opt,name=max_peers,json=maxPeers,proto3" json:"max_peers,omitempty"`
	MaxBandwidthMbps  int32                  `protobuf:"varint,8,opt,name=max_bandwidth_mbps,json=maxBandwidthMbps,proto3" json:"max_bandwidth_mbps,omitempty"`
	ConnectionTimeout *durationpb.Duration   `protobuf:"bytes,9,opt,name=connection_timeout,json=connectionTimeout,proto3" json:"connection_timeout,omitempty"`
	EnableEncryption  bool                   `protobuf:"varint,10,opt,name=enable_encryption,json=enableEncryption,proto3" json:"enable_encryption,omitempty"`
	PrivateKeyPath    string                 `protobuf:"bytes,11,opt,name=private_key_path,json=privateKeyPath,proto3" json:"private_key_path,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *NodeConfig) Reset() {
	*x = NodeConfig{}
	mi := &file_proto_v1_node_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NodeConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeConfig) ProtoMessage() {}

func (x *NodeConfig) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_node_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeConfig.ProtoReflect.Descriptor instead.
func (*NodeConfig) Descriptor() ([]byte, []int) {
	return file_proto_v1_node_proto_rawDescGZIP(), []int{1}
}

func (x *NodeConfig) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *NodeConfig) GetP2PPort() int32 {
	if x != nil {
		return x.P2PPort
	}
	return 0
}

func (x *NodeConfig) GetListenAddresses() []string {
	if x != nil {
		return x.ListenAddresses
	}
	return nil
}

func (x *NodeConfig) GetBootstrapPeers() []string {
	if x != nil {
		return x.BootstrapPeers
	}
	return nil
}

func (x *NodeConfig) GetEnableDiscovery() bool {
	if x != nil {
		return x.EnableDiscovery
	}
	return false
}

func (x *NodeConfig) GetDiscoveryMethod() string {
	if x != nil {
		return x.DiscoveryMethod
	}
	return ""
}

func (x *NodeConfig) GetMaxPeers() int32 {
	if x != nil {
		return x.MaxPeers
	}
	return 0
}

func (x *NodeConfig) GetMaxBandwidthMbps() int32 {
	if x != nil {
		return x.MaxBandwidthMbps
	}
	return 0
}

func (x *NodeConfig) GetConnectionTimeout() *durationpb.Duration {
	if x != nil {
		return x.ConnectionTimeout
	}
	return nil
}

func (x *NodeConfig) GetEnableEncryption() bool {
	if x != nil {
		return x.EnableEncryption
	}
	return false
}

func (x *NodeConfig) GetPrivateKeyPath() string {
	if x != nil {
		return x.PrivateKeyPath
	}
	return ""
}

type InitializeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	PeerId        string                 `protobuf:"bytes,3,opt,name=peer_id,json=peerId,proto3" json:"peer_id,omitempty"` // Generated peer ID
	Multiaddrs    []string               `protobuf:"bytes,4,rep,name=multiaddrs,proto3" json:"multiaddrs,omitempty"`       // Node's multiaddresses
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InitializeResponse) Reset() {
	*x = InitializeResponse{}
	mi := &file_proto_v1_node_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InitializeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitializeResponse) ProtoMessage() {}

func (x *InitializeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_node_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitializeResponse.ProtoReflect.Descriptor instead.
func (*InitializeResponse) Descriptor() ([]byte, []int) {
	return file_proto_v1_node_proto_rawDescGZIP(), []int{2}
}

func (x *InitializeResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *InitializeResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *InitializeResponse) GetPeerId() string {
	if x != nil {
		return x.PeerId
	}
	return ""
}

func (x *InitializeResponse) GetMultiaddrs() []string {
	if x != nil {
		return x.Multiaddrs
	}
	return nil
}

// Start with network readiness check
type StartRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WaitForReady  bool                   `protobuf:"varint,1,opt,name=wait_for_ready,json=waitForReady,proto3" json:"wait_for_ready,omitempty"`
	ReadyTimeout  *durationpb.Duration   `protobuf:"bytes,2,opt,name=ready_timeout,json=readyTimeout,proto3" json:"ready_timeout,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartRequest) Reset() {
	*x = StartRequest{}
	mi := &file_proto_v1_node_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartRequest) ProtoMessage() {}

func (x *StartRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_node_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartRequest.ProtoReflect.Descriptor instead.
func (*StartRequest) Descriptor() ([]byte, []int) {
	return file_proto_v1_node_proto_rawDescGZIP(), []int{3}
}

func (x *StartRequest) GetWaitForReady() bool {
	if x != nil {
		return x.WaitForReady
	}
	return false
}

func (x *StartRequest) GetReadyTimeout() *durationpb.Duration {
	if x != nil {
		return x.ReadyTimeout
	}
	return nil
}

type StartResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Endpoints     []*Endpoint            `protobuf:"bytes,3,rep,name=endpoints,proto3" json:"endpoints,omitempty"`
	Readiness     *NetworkReadiness      `protobuf:"bytes,4,opt,name=readiness,proto3" json:"readiness,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartResponse) Reset() {
	*x = StartResponse{}
	mi := &file_proto_v1_node_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartResponse) ProtoMessage() {}

func (x *StartResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_node_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartResponse.ProtoReflect.Descriptor instead.
func (*StartResponse) Descriptor() ([]byte, []int) {
	return file_proto_v1_node_proto_rawDescGZIP(), []int{4}
}

func (x *StartResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *StartResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *StartResponse) GetEndpoints() []*Endpoint {
	if x != nil {
		return x.Endpoints
	}
	return nil
}

func (x *StartResponse) GetReadiness() *NetworkReadiness {
	if x != nil {
		return x.Readiness
	}
	return nil
}

type Endpoint struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Protocol      string                 `protobuf:"bytes,1,opt,name=protocol,proto3" json:"protocol,omitempty"` // tcp, quic, websocket
	Address       string                 `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	Secure        bool                   `protobuf:"varint,3,opt,name=secure,proto3" json:"secure,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Endpoint) Reset() {
	*x = Endpoint{}
	mi := &file_proto_v1_node_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Endpoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Endpoint) ProtoMessage() {}

func (x *Endpoint) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_node_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Endpoint.ProtoReflect.Descriptor instead.
func (*Endpoint) Descriptor() ([]byte, []int) {
	return file_proto_v1_node_proto_rawDescGZIP(), []int{5}
}

func (x *Endpoint) GetProtocol() string {
	if x != nil {
		return x.Protocol
	}
	return ""
}

func (x *Endpoint) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *Endpoint) GetSecure() bool {
	if x != nil {
		return x.Secure
	}
	return false
}

type NetworkReadiness struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IsReachable   bool                   `protobuf:"varint,1,opt,name=is_reachable,json=isReachable,proto3" json:"is_reachable,omitempty"`
	HasPublicIp   bool                   `protobuf:"varint,2,opt,name=has_public_ip,json=hasPublicIp,proto3" json:"has_public_ip,omitempty"`
	NatType       string                 `protobuf:"bytes,3,opt,name=nat_type,json=natType,proto3" json:"nat_type,omitempty"`
	PublicAddrs   []string               `protobuf:"bytes,4,rep,name=public_addrs,json=publicAddrs,proto3" json:"public_addrs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NetworkReadiness) Reset() {
	*x = NetworkReadiness{}
	mi := &file_proto_v1_node_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkReadiness) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkReadiness) ProtoMessage() {}

func (x *NetworkReadiness) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_node_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkReadiness.ProtoReflect.Descriptor instead.
func (*NetworkReadiness) Descriptor() ([]byte, []int) {
	return file_proto_v1_node_proto_rawDescGZIP(), []int{6}
}

func (x *NetworkReadiness) GetIsReachable() bool {
	if x != nil {
		return x.IsReachable
	}
	return false
}

func (x *NetworkReadiness) GetHasPublicIp() bool {
	if x != nil {
		return x.HasPublicIp
	}
	return false
}

func (x *NetworkReadiness) GetNatType() string {
	if x != nil {
		return x.NatType
	}
	return ""
}

func (x *NetworkReadiness) GetPublicAddrs() []string {
	if x != nil {
		return x.PublicAddrs
	}
	return nil
}

// Graceful stop with connection draining
type StopRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Force         bool                   `protobuf:"varint,1,opt,name=force,proto3" json:"force,omitempty"`
	DrainTimeout  *durationpb.Duration   `protobuf:"bytes,2,opt,name=drain_timeout,json=drainTimeout,proto3" json:"drain_timeout,omitempty"`
	Reason        string                 `protobuf:"bytes,3,opt,name=reason,proto3" json:"reason,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StopRequest) Reset() {
	*x = StopRequest{}
	mi := &file_proto_v1_node_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StopRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopRequest) ProtoMessage() {}

func (x *StopRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_node_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopRequest.ProtoReflect.Descriptor instead.
func (*StopRequest) Descriptor() ([]byte, []int) {
	return file_proto_v1_node_proto_rawDescGZIP(), []int{7}
}

func (x *StopRequest) GetForce() bool {
	if x != nil {
		return x.Force
	}
	return false
}

func (x *StopRequest) GetDrainTimeout() *durationpb.Duration {
	if x != nil {
		return x.DrainTimeout
	}
	return nil
}

func (x *StopRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type StopResponse struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Success           bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message           string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	ConnectionsClosed int32                  `protobuf:"varint,3,opt,name=connections_closed,json=connectionsClosed,proto3" json:"connections_closed,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *StopResponse) Reset() {
	*x = StopResponse{}
	mi := &file_proto_v1_node_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StopResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopResponse) ProtoMessage() {}

func (x *StopResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_node_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopResponse.ProtoReflect.Descriptor instead.
func (*StopResponse) Descriptor() ([]byte, []int) {
	return file_proto_v1_node_proto_rawDescGZIP(), []int{8}
}

func (x *StopResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *StopResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *StopResponse) GetConnectionsClosed() int32 {
	if x != nil {
		return x.ConnectionsClosed
	}
	return 0
}

// Health check with network diagnostics
type HealthCheckRequest struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	IncludeDiagnostics bool                   `protobuf:"varint,1,opt,name=include_diagnostics,json=includeDiagnostics,proto3" json:"include_diagnostics,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *HealthCheckRequest) Reset() {
	*x = HealthCheckRequest{}
	mi := &file_proto_v1_node_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckRequest) ProtoMessage() {}

func (x *HealthCheckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_node_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckRequest.ProtoReflect.Descriptor instead.
func (*HealthCheckRequest) Descriptor() ([]byte, []int) {
	return file_proto_v1_node_proto_rawDescGZIP(), []int{9}
}

func (x *HealthCheckRequest) GetIncludeDiagnostics() bool {
	if x != nil {
		return x.IncludeDiagnostics
	}
	return false
}

type HealthCheckResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Healthy       bool                   `protobuf:"varint,1,opt,name=healthy,proto3" json:"healthy,omitempty"`
	Status        string                 `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"` // healthy, degraded, unhealthy
	Diagnostics   *NetworkDiagnostics    `protobuf:"bytes,3,opt,name=diagnostics,proto3" json:"diagnostics,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthCheckResponse) Reset() {
	*x = HealthCheckResponse{}
	mi := &file_proto_v1_node_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckResponse) ProtoMessage() {}

func (x *HealthCheckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_node_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckResponse.ProtoReflect.Descriptor instead.
func (*HealthCheckResponse) Descriptor() ([]byte, []int) {
	return file_proto_v1_node_proto_rawDescGZIP(), []int{10}
}

func (x *HealthCheckResponse) GetHealthy() bool {
	if x != nil {
		return x.Healthy
	}
	return false
}

func (x *HealthCheckResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *HealthCheckResponse) GetDiagnostics() *NetworkDiagnostics {
	if x != nil {
		return x.Diagnostics
	}
	return nil
}

type NetworkDiagnostics struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	ActiveConnections  int32                  `protobuf:"varint,1,opt,name=active_connections,json=activeConnections,proto3" json:"active_connections,omitempty"`
	PendingConnections int32                  `protobuf:"varint,2,opt,name=pending_connections,json=pendingConnections,proto3" json:"pending_connections,omitempty"`
	BandwidthUsageMbps float64                `protobuf:"fixed64,3,opt,name=bandwidth_usage_mbps,json=bandwidthUsageMbps,proto3" json:"bandwidth_usage_mbps,omitempty"`
	CpuUsagePercent    float64                `protobuf:"fixed64,4,opt,name=cpu_usage_percent,json=cpuUsagePercent,proto3" json:"cpu_usage_percent,omitempty"`
	MemoryUsageMb      float64                `protobuf:"fixed64,5,opt,name=memory_usage_mb,json=memoryUsageMb,proto3" json:"memory_usage_mb,omitempty"`
	Issues             map[string]string      `protobuf:"bytes,6,rep,name=issues,proto3" json:"issues,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *NetworkDiagnostics) Reset() {
	*x = NetworkDiagnostics{}
	mi := &file_proto_v1_node_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkDiagnostics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkDiagnostics) ProtoMessage() {}

func (x *NetworkDiagnostics) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_node_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkDiagnostics.ProtoReflect.Descriptor instead.
func (*NetworkDiagnostics) Descriptor() ([]byte, []int) {
	return file_proto_v1_node_proto_rawDescGZIP(), []int{11}
}

func (x *NetworkDiagnostics) GetActiveConnections() int32 {
	if x != nil {
		return x.ActiveConnections
	}
	return 0
}

func (x *NetworkDiagnostics) GetPendingConnections() int32 {
	if x != nil {
		return x.PendingConnections
	}
	return 0
}

func (x *NetworkDiagnostics) GetBandwidthUsageMbps() float64 {
	if x != nil {
		return x.BandwidthUsageMbps
	}
	return 0
}

func (x *NetworkDiagnostics) GetCpuUsagePercent() float64 {
	if x != nil {
		return x.CpuUsagePercent
	}
	return 0
}

func (x *NetworkDiagnostics) GetMemoryUsageMb() float64 {
	if x != nil {
		return x.MemoryUsageMb
	}
	return 0
}

func (x *NetworkDiagnostics) GetIssues() map[string]string {
	if x != nil {
		return x.Issues
	}
	return nil
}

// Plugin info with network capabilities
type GetInfoRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetInfoRequest) Reset() {
	*x = GetInfoRequest{}
	mi := &file_proto_v1_node_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInfoRequest) ProtoMessage() {}

func (x *GetInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_node_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInfoRequest.ProtoReflect.Descriptor instead.
func (*GetInfoRequest) Descriptor() ([]byte, []int) {
	return file_proto_v1_node_proto_rawDescGZIP(), []int{12}
}

type GetInfoResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Version       string                 `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	PeerId        string                 `protobuf:"bytes,4,opt,name=peer_id,json=peerId,proto3" json:"peer_id,omitempty"`
	Protocols     []string               `protobuf:"bytes,5,rep,name=protocols,proto3" json:"protocols,omitempty"` // Supported protocols
	ListenAddrs   []string               `protobuf:"bytes,6,rep,name=listen_addrs,json=listenAddrs,proto3" json:"listen_addrs,omitempty"`
	Capabilities  *NodeCapabilities      `protobuf:"bytes,7,opt,name=capabilities,proto3" json:"capabilities,omitempty"`
	Status        *NodeStatus            `protobuf:"bytes,8,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetInfoResponse) Reset() {
	*x = GetInfoResponse{}
	mi := &file_proto_v1_node_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInfoResponse) ProtoMessage() {}

func (x *GetInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_node_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInfoResponse.ProtoReflect.Descriptor instead.
func (*GetInfoResponse) Descriptor() ([]byte, []int) {
	return file_proto_v1_node_proto_rawDescGZIP(), []int{13}
}

func (x *GetInfoResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetInfoResponse) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *GetInfoResponse) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *GetInfoResponse) GetPeerId() string {
	if x != nil {
		return x.PeerId
	}
	return ""
}

func (x *GetInfoResponse) GetProtocols() []string {
	if x != nil {
		return x.Protocols
	}
	return nil
}

func (x *GetInfoResponse) GetListenAddrs() []string {
	if x != nil {
		return x.ListenAddrs
	}
	return nil
}

func (x *GetInfoResponse) GetCapabilities() *NodeCapabilities {
	if x != nil {
		return x.Capabilities
	}
	return nil
}

func (x *GetInfoResponse) GetStatus() *NodeStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

type NodeCapabilities struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	SupportsRelay        bool                   `protobuf:"varint,1,opt,name=supports_relay,json=supportsRelay,proto3" json:"supports_relay,omitempty"`
	SupportsNatTraversal bool                   `protobuf:"varint,2,opt,name=supports_nat_traversal,json=supportsNatTraversal,proto3" json:"supports_nat_traversal,omitempty"`
	SupportsDht          bool                   `protobuf:"varint,3,opt,name=supports_dht,json=supportsDht,proto3" json:"supports_dht,omitempty"`
	SupportsPubsub       bool                   `protobuf:"varint,4,opt,name=supports_pubsub,json=supportsPubsub,proto3" json:"supports_pubsub,omitempty"`
	TransportProtocols   []string               `protobuf:"bytes,5,rep,name=transport_protocols,json=transportProtocols,proto3" json:"transport_protocols,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *NodeCapabilities) Reset() {
	*x = NodeCapabilities{}
	mi := &file_proto_v1_node_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NodeCapabilities) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeCapabilities) ProtoMessage() {}

func (x *NodeCapabilities) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_node_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeCapabilities.ProtoReflect.Descriptor instead.
func (*NodeCapabilities) Descriptor() ([]byte, []int) {
	return file_proto_v1_node_proto_rawDescGZIP(), []int{14}
}

func (x *NodeCapabilities) GetSupportsRelay() bool {
	if x != nil {
		return x.SupportsRelay
	}
	return false
}

func (x *NodeCapabilities) GetSupportsNatTraversal() bool {
	if x != nil {
		return x.SupportsNatTraversal
	}
	return false
}

func (x *NodeCapabilities) GetSupportsDht() bool {
	if x != nil {
		return x.SupportsDht
	}
	return false
}

func (x *NodeCapabilities) GetSupportsPubsub() bool {
	if x != nil {
		return x.SupportsPubsub
	}
	return false
}

func (x *NodeCapabilities) GetTransportProtocols() []string {
	if x != nil {
		return x.TransportProtocols
	}
	return nil
}

type NodeStatus struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	State         string                 `protobuf:"bytes,1,opt,name=state,proto3" json:"state,omitempty"` // initializing, running, degraded, error
	StartedAt     *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=started_at,json=startedAt,proto3" json:"started_at,omitempty"`
	UptimeSeconds int64                  `protobuf:"varint,3,opt,name=uptime_seconds,json=uptimeSeconds,proto3" json:"uptime_seconds,omitempty"`
	Version       string                 `protobuf:"bytes,4,opt,name=version,proto3" json:"version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NodeStatus) Reset() {
	*x = NodeStatus{}
	mi := &file_proto_v1_node_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NodeStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeStatus) ProtoMessage() {}

func (x *NodeStatus) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_node_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeStatus.ProtoReflect.Descriptor instead.
func (*NodeStatus) Descriptor() ([]byte, []int) {
	return file_proto_v1_node_proto_rawDescGZIP(), []int{15}
}

func (x *NodeStatus) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *NodeStatus) GetStartedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.StartedAt
	}
	return nil
}

func (x *NodeStatus) GetUptimeSeconds() int64 {
	if x != nil {
		return x.UptimeSeconds
	}
	return 0
}

func (x *NodeStatus) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

// Peer management messages
type ListPeersRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	StatusFilter   string                 `protobuf:"bytes,1,opt,name=status_filter,json=statusFilter,proto3" json:"status_filter,omitempty"` // connected, connecting, disconnected
	Limit          int32                  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset         int32                  `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	IncludeMetrics bool                   `protobuf:"varint,4,opt,name=include_metrics,json=includeMetrics,proto3" json:"include_metrics,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ListPeersRequest) Reset() {
	*x = ListPeersRequest{}
	mi := &file_proto_v1_node_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPeersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPeersRequest) ProtoMessage() {}

func (x *ListPeersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_node_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPeersRequest.ProtoReflect.Descriptor instead.
func (*ListPeersRequest) Descriptor() ([]byte, []int) {
	return file_proto_v1_node_proto_rawDescGZIP(), []int{16}
}

func (x *ListPeersRequest) GetStatusFilter() string {
	if x != nil {
		return x.StatusFilter
	}
	return ""
}

func (x *ListPeersRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListPeersRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ListPeersRequest) GetIncludeMetrics() bool {
	if x != nil {
		return x.IncludeMetrics
	}
	return false
}

type ListPeersResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Peers         []*PeerInfo            `protobuf:"bytes,1,rep,name=peers,proto3" json:"peers,omitempty"`
	TotalCount    int32                  `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	Stats         *PeerStats             `protobuf:"bytes,3,opt,name=stats,proto3" json:"stats,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPeersResponse) Reset() {
	*x = ListPeersResponse{}
	mi := &file_proto_v1_node_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPeersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPeersResponse) ProtoMessage() {}

func (x *ListPeersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_node_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPeersResponse.ProtoReflect.Descriptor instead.
func (*ListPeersResponse) Descriptor() ([]byte, []int) {
	return file_proto_v1_node_proto_rawDescGZIP(), []int{17}
}

func (x *ListPeersResponse) GetPeers() []*PeerInfo {
	if x != nil {
		return x.Peers
	}
	return nil
}

func (x *ListPeersResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *ListPeersResponse) GetStats() *PeerStats {
	if x != nil {
		return x.Stats
	}
	return nil
}

type PeerInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Addrs         []string               `protobuf:"bytes,2,rep,name=addrs,proto3" json:"addrs,omitempty"`
	Status        string                 `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	ConnectedAt   *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=connected_at,json=connectedAt,proto3" json:"connected_at,omitempty"`
	LastSeen      *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=last_seen,json=lastSeen,proto3" json:"last_seen,omitempty"`
	Metrics       *PeerMetrics           `protobuf:"bytes,6,opt,name=metrics,proto3" json:"metrics,omitempty"`
	Protocols     []string               `protobuf:"bytes,7,rep,name=protocols,proto3" json:"protocols,omitempty"`
	AgentVersion  string                 `protobuf:"bytes,8,opt,name=agent_version,json=agentVersion,proto3" json:"agent_version,omitempty"`
	Metadata      map[string]string      `protobuf:"bytes,9,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PeerInfo) Reset() {
	*x = PeerInfo{}
	mi := &file_proto_v1_node_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PeerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PeerInfo) ProtoMessage() {}

func (x *PeerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_node_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PeerInfo.ProtoReflect.Descriptor instead.
func (*PeerInfo) Descriptor() ([]byte, []int) {
	return file_proto_v1_node_proto_rawDescGZIP(), []int{18}
}

func (x *PeerInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PeerInfo) GetAddrs() []string {
	if x != nil {
		return x.Addrs
	}
	return nil
}

func (x *PeerInfo) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *PeerInfo) GetConnectedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ConnectedAt
	}
	return nil
}

func (x *PeerInfo) GetLastSeen() *timestamppb.Timestamp {
	if x != nil {
		return x.LastSeen
	}
	return nil
}

func (x *PeerInfo) GetMetrics() *PeerMetrics {
	if x != nil {
		return x.Metrics
	}
	return nil
}

func (x *PeerInfo) GetProtocols() []string {
	if x != nil {
		return x.Protocols
	}
	return nil
}

func (x *PeerInfo) GetAgentVersion() string {
	if x != nil {
		return x.AgentVersion
	}
	return ""
}

func (x *PeerInfo) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type PeerMetrics struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	BytesSent        int64                  `protobuf:"varint,1,opt,name=bytes_sent,json=bytesSent,proto3" json:"bytes_sent,omitempty"`
	BytesReceived    int64                  `protobuf:"varint,2,opt,name=bytes_received,json=bytesReceived,proto3" json:"bytes_received,omitempty"`
	MessagesSent     int64                  `protobuf:"varint,3,opt,name=messages_sent,json=messagesSent,proto3" json:"messages_sent,omitempty"`
	MessagesReceived int64                  `protobuf:"varint,4,opt,name=messages_received,json=messagesReceived,proto3" json:"messages_received,omitempty"`
	LatencyMs        float64                `protobuf:"fixed64,5,opt,name=latency_ms,json=latencyMs,proto3" json:"latency_ms,omitempty"`
	PacketLoss       float64                `protobuf:"fixed64,6,opt,name=packet_loss,json=packetLoss,proto3" json:"packet_loss,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *PeerMetrics) Reset() {
	*x = PeerMetrics{}
	mi := &file_proto_v1_node_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PeerMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PeerMetrics) ProtoMessage() {}

func (x *PeerMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_node_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PeerMetrics.ProtoReflect.Descriptor instead.
func (*PeerMetrics) Descriptor() ([]byte, []int) {
	return file_proto_v1_node_proto_rawDescGZIP(), []int{19}
}

func (x *PeerMetrics) GetBytesSent() int64 {
	if x != nil {
		return x.BytesSent
	}
	return 0
}

func (x *PeerMetrics) GetBytesReceived() int64 {
	if x != nil {
		return x.BytesReceived
	}
	return 0
}

func (x *PeerMetrics) GetMessagesSent() int64 {
	if x != nil {
		return x.MessagesSent
	}
	return 0
}

func (x *PeerMetrics) GetMessagesReceived() int64 {
	if x != nil {
		return x.MessagesReceived
	}
	return 0
}

func (x *PeerMetrics) GetLatencyMs() float64 {
	if x != nil {
		return x.LatencyMs
	}
	return 0
}

func (x *PeerMetrics) GetPacketLoss() float64 {
	if x != nil {
		return x.PacketLoss
	}
	return 0
}

type PeerStats struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TotalKnown    int32                  `protobuf:"varint,1,opt,name=total_known,json=totalKnown,proto3" json:"total_known,omitempty"`
	Connected     int32                  `protobuf:"varint,2,opt,name=connected,proto3" json:"connected,omitempty"`
	Connecting    int32                  `protobuf:"varint,3,opt,name=connecting,proto3" json:"connecting,omitempty"`
	Disconnected  int32                  `protobuf:"varint,4,opt,name=disconnected,proto3" json:"disconnected,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PeerStats) Reset() {
	*x = PeerStats{}
	mi := &file_proto_v1_node_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PeerStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PeerStats) ProtoMessage() {}

func (x *PeerStats) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_node_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PeerStats.ProtoReflect.Descriptor instead.
func (*PeerStats) Descriptor() ([]byte, []int) {
	return file_proto_v1_node_proto_rawDescGZIP(), []int{20}
}

func (x *PeerStats) GetTotalKnown() int32 {
	if x != nil {
		return x.TotalKnown
	}
	return 0
}

func (x *PeerStats) GetConnected() int32 {
	if x != nil {
		return x.Connected
	}
	return 0
}

func (x *PeerStats) GetConnecting() int32 {
	if x != nil {
		return x.Connecting
	}
	return 0
}

func (x *PeerStats) GetDisconnected() int32 {
	if x != nil {
		return x.Disconnected
	}
	return 0
}

type ConnectPeerRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PeerId        string                 `protobuf:"bytes,1,opt,name=peer_id,json=peerId,proto3" json:"peer_id,omitempty"`
	Addrs         []string               `protobuf:"bytes,2,rep,name=addrs,proto3" json:"addrs,omitempty"`
	Timeout       *durationpb.Duration   `protobuf:"bytes,3,opt,name=timeout,proto3" json:"timeout,omitempty"`
	Metadata      map[string]string      `protobuf:"bytes,4,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConnectPeerRequest) Reset() {
	*x = ConnectPeerRequest{}
	mi := &file_proto_v1_node_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConnectPeerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectPeerRequest) ProtoMessage() {}

func (x *ConnectPeerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_node_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectPeerRequest.ProtoReflect.Descriptor instead.
func (*ConnectPeerRequest) Descriptor() ([]byte, []int) {
	return file_proto_v1_node_proto_rawDescGZIP(), []int{21}
}

func (x *ConnectPeerRequest) GetPeerId() string {
	if x != nil {
		return x.PeerId
	}
	return ""
}

func (x *ConnectPeerRequest) GetAddrs() []string {
	if x != nil {
		return x.Addrs
	}
	return nil
}

func (x *ConnectPeerRequest) GetTimeout() *durationpb.Duration {
	if x != nil {
		return x.Timeout
	}
	return nil
}

func (x *ConnectPeerRequest) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type ConnectPeerResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	PeerInfo      *PeerInfo              `protobuf:"bytes,3,opt,name=peer_info,json=peerInfo,proto3" json:"peer_info,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConnectPeerResponse) Reset() {
	*x = ConnectPeerResponse{}
	mi := &file_proto_v1_node_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConnectPeerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectPeerResponse) ProtoMessage() {}

func (x *ConnectPeerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_node_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectPeerResponse.ProtoReflect.Descriptor instead.
func (*ConnectPeerResponse) Descriptor() ([]byte, []int) {
	return file_proto_v1_node_proto_rawDescGZIP(), []int{22}
}

func (x *ConnectPeerResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ConnectPeerResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ConnectPeerResponse) GetPeerInfo() *PeerInfo {
	if x != nil {
		return x.PeerInfo
	}
	return nil
}

type DisconnectPeerRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PeerId        string                 `protobuf:"bytes,1,opt,name=peer_id,json=peerId,proto3" json:"peer_id,omitempty"`
	Reason        string                 `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	Blacklist     bool                   `protobuf:"varint,3,opt,name=blacklist,proto3" json:"blacklist,omitempty"` // Prevent reconnection
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DisconnectPeerRequest) Reset() {
	*x = DisconnectPeerRequest{}
	mi := &file_proto_v1_node_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DisconnectPeerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisconnectPeerRequest) ProtoMessage() {}

func (x *DisconnectPeerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_node_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisconnectPeerRequest.ProtoReflect.Descriptor instead.
func (*DisconnectPeerRequest) Descriptor() ([]byte, []int) {
	return file_proto_v1_node_proto_rawDescGZIP(), []int{23}
}

func (x *DisconnectPeerRequest) GetPeerId() string {
	if x != nil {
		return x.PeerId
	}
	return ""
}

func (x *DisconnectPeerRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *DisconnectPeerRequest) GetBlacklist() bool {
	if x != nil {
		return x.Blacklist
	}
	return false
}

type DisconnectPeerResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DisconnectPeerResponse) Reset() {
	*x = DisconnectPeerResponse{}
	mi := &file_proto_v1_node_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DisconnectPeerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisconnectPeerResponse) ProtoMessage() {}

func (x *DisconnectPeerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_node_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisconnectPeerResponse.ProtoReflect.Descriptor instead.
func (*DisconnectPeerResponse) Descriptor() ([]byte, []int) {
	return file_proto_v1_node_proto_rawDescGZIP(), []int{24}
}

func (x *DisconnectPeerResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *DisconnectPeerResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// Network status with detailed metrics
type GetNetworkStatusRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	IncludePeers     bool                   `protobuf:"varint,1,opt,name=include_peers,json=includePeers,proto3" json:"include_peers,omitempty"`
	IncludeBandwidth bool                   `protobuf:"varint,2,opt,name=include_bandwidth,json=includeBandwidth,proto3" json:"include_bandwidth,omitempty"`
	IncludeRouting   bool                   `protobuf:"varint,3,opt,name=include_routing,json=includeRouting,proto3" json:"include_routing,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *GetNetworkStatusRequest) Reset() {
	*x = GetNetworkStatusRequest{}
	mi := &file_proto_v1_node_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNetworkStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNetworkStatusRequest) ProtoMessage() {}

func (x *GetNetworkStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_node_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNetworkStatusRequest.ProtoReflect.Descriptor instead.
func (*GetNetworkStatusRequest) Descriptor() ([]byte, []int) {
	return file_proto_v1_node_proto_rawDescGZIP(), []int{25}
}

func (x *GetNetworkStatusRequest) GetIncludePeers() bool {
	if x != nil {
		return x.IncludePeers
	}
	return false
}

func (x *GetNetworkStatusRequest) GetIncludeBandwidth() bool {
	if x != nil {
		return x.IncludeBandwidth
	}
	return false
}

func (x *GetNetworkStatusRequest) GetIncludeRouting() bool {
	if x != nil {
		return x.IncludeRouting
	}
	return false
}

type GetNetworkStatusResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Health        *NetworkHealth         `protobuf:"bytes,1,opt,name=health,proto3" json:"health,omitempty"`
	Metrics       *NetworkMetrics        `protobuf:"bytes,2,opt,name=metrics,proto3" json:"metrics,omitempty"`
	Bandwidth     *BandwidthStats        `protobuf:"bytes,3,opt,name=bandwidth,proto3" json:"bandwidth,omitempty"`
	Routing       *RoutingInfo           `protobuf:"bytes,4,opt,name=routing,proto3" json:"routing,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNetworkStatusResponse) Reset() {
	*x = GetNetworkStatusResponse{}
	mi := &file_proto_v1_node_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNetworkStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNetworkStatusResponse) ProtoMessage() {}

func (x *GetNetworkStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_node_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNetworkStatusResponse.ProtoReflect.Descriptor instead.
func (*GetNetworkStatusResponse) Descriptor() ([]byte, []int) {
	return file_proto_v1_node_proto_rawDescGZIP(), []int{26}
}

func (x *GetNetworkStatusResponse) GetHealth() *NetworkHealth {
	if x != nil {
		return x.Health
	}
	return nil
}

func (x *GetNetworkStatusResponse) GetMetrics() *NetworkMetrics {
	if x != nil {
		return x.Metrics
	}
	return nil
}

func (x *GetNetworkStatusResponse) GetBandwidth() *BandwidthStats {
	if x != nil {
		return x.Bandwidth
	}
	return nil
}

func (x *GetNetworkStatusResponse) GetRouting() *RoutingInfo {
	if x != nil {
		return x.Routing
	}
	return nil
}

type NetworkHealth struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"` // healthy, degraded, unhealthy
	Score         float64                `protobuf:"fixed64,2,opt,name=score,proto3" json:"score,omitempty"` // 0.0 to 1.0
	Issues        []string               `protobuf:"bytes,3,rep,name=issues,proto3" json:"issues,omitempty"`
	LastUpdated   *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=last_updated,json=lastUpdated,proto3" json:"last_updated,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NetworkHealth) Reset() {
	*x = NetworkHealth{}
	mi := &file_proto_v1_node_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkHealth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkHealth) ProtoMessage() {}

func (x *NetworkHealth) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_node_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkHealth.ProtoReflect.Descriptor instead.
func (*NetworkHealth) Descriptor() ([]byte, []int) {
	return file_proto_v1_node_proto_rawDescGZIP(), []int{27}
}

func (x *NetworkHealth) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *NetworkHealth) GetScore() float64 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *NetworkHealth) GetIssues() []string {
	if x != nil {
		return x.Issues
	}
	return nil
}

func (x *NetworkHealth) GetLastUpdated() *timestamppb.Timestamp {
	if x != nil {
		return x.LastUpdated
	}
	return nil
}

type NetworkMetrics struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	TotalConnections  int64                  `protobuf:"varint,1,opt,name=total_connections,json=totalConnections,proto3" json:"total_connections,omitempty"`
	ActiveConnections int64                  `protobuf:"varint,2,opt,name=active_connections,json=activeConnections,proto3" json:"active_connections,omitempty"`
	FailedConnections int64                  `protobuf:"varint,3,opt,name=failed_connections,json=failedConnections,proto3" json:"failed_connections,omitempty"`
	BytesSent         int64                  `protobuf:"varint,4,opt,name=bytes_sent,json=bytesSent,proto3" json:"bytes_sent,omitempty"`
	BytesReceived     int64                  `protobuf:"varint,5,opt,name=bytes_received,json=bytesReceived,proto3" json:"bytes_received,omitempty"`
	MessagesSent      int64                  `protobuf:"varint,6,opt,name=messages_sent,json=messagesSent,proto3" json:"messages_sent,omitempty"`
	MessagesReceived  int64                  `protobuf:"varint,7,opt,name=messages_received,json=messagesReceived,proto3" json:"messages_received,omitempty"`
	StartedAt         *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=started_at,json=startedAt,proto3" json:"started_at,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *NetworkMetrics) Reset() {
	*x = NetworkMetrics{}
	mi := &file_proto_v1_node_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkMetrics) ProtoMessage() {}

func (x *NetworkMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_node_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkMetrics.ProtoReflect.Descriptor instead.
func (*NetworkMetrics) Descriptor() ([]byte, []int) {
	return file_proto_v1_node_proto_rawDescGZIP(), []int{28}
}

func (x *NetworkMetrics) GetTotalConnections() int64 {
	if x != nil {
		return x.TotalConnections
	}
	return 0
}

func (x *NetworkMetrics) GetActiveConnections() int64 {
	if x != nil {
		return x.ActiveConnections
	}
	return 0
}

func (x *NetworkMetrics) GetFailedConnections() int64 {
	if x != nil {
		return x.FailedConnections
	}
	return 0
}

func (x *NetworkMetrics) GetBytesSent() int64 {
	if x != nil {
		return x.BytesSent
	}
	return 0
}

func (x *NetworkMetrics) GetBytesReceived() int64 {
	if x != nil {
		return x.BytesReceived
	}
	return 0
}

func (x *NetworkMetrics) GetMessagesSent() int64 {
	if x != nil {
		return x.MessagesSent
	}
	return 0
}

func (x *NetworkMetrics) GetMessagesReceived() int64 {
	if x != nil {
		return x.MessagesReceived
	}
	return 0
}

func (x *NetworkMetrics) GetStartedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.StartedAt
	}
	return nil
}

type BandwidthStats struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RateInMbps    float64                `protobuf:"fixed64,1,opt,name=rate_in_mbps,json=rateInMbps,proto3" json:"rate_in_mbps,omitempty"`
	RateOutMbps   float64                `protobuf:"fixed64,2,opt,name=rate_out_mbps,json=rateOutMbps,proto3" json:"rate_out_mbps,omitempty"`
	TotalIn       int64                  `protobuf:"varint,3,opt,name=total_in,json=totalIn,proto3" json:"total_in,omitempty"`
	TotalOut      int64                  `protobuf:"varint,4,opt,name=total_out,json=totalOut,proto3" json:"total_out,omitempty"`
	LimitMbps     float64                `protobuf:"fixed64,5,opt,name=limit_mbps,json=limitMbps,proto3" json:"limit_mbps,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BandwidthStats) Reset() {
	*x = BandwidthStats{}
	mi := &file_proto_v1_node_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BandwidthStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BandwidthStats) ProtoMessage() {}

func (x *BandwidthStats) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_node_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BandwidthStats.ProtoReflect.Descriptor instead.
func (*BandwidthStats) Descriptor() ([]byte, []int) {
	return file_proto_v1_node_proto_rawDescGZIP(), []int{29}
}

func (x *BandwidthStats) GetRateInMbps() float64 {
	if x != nil {
		return x.RateInMbps
	}
	return 0
}

func (x *BandwidthStats) GetRateOutMbps() float64 {
	if x != nil {
		return x.RateOutMbps
	}
	return 0
}

func (x *BandwidthStats) GetTotalIn() int64 {
	if x != nil {
		return x.TotalIn
	}
	return 0
}

func (x *BandwidthStats) GetTotalOut() int64 {
	if x != nil {
		return x.TotalOut
	}
	return 0
}

func (x *BandwidthStats) GetLimitMbps() float64 {
	if x != nil {
		return x.LimitMbps
	}
	return 0
}

type RoutingInfo struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	RoutingTableSize int32                  `protobuf:"varint,1,opt,name=routing_table_size,json=routingTableSize,proto3" json:"routing_table_size,omitempty"`
	Protocols        []string               `protobuf:"bytes,2,rep,name=protocols,proto3" json:"protocols,omitempty"`
	IsReachable      bool                   `protobuf:"varint,3,opt,name=is_reachable,json=isReachable,proto3" json:"is_reachable,omitempty"`
	NatStatus        string                 `protobuf:"bytes,4,opt,name=nat_status,json=natStatus,proto3" json:"nat_status,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *RoutingInfo) Reset() {
	*x = RoutingInfo{}
	mi := &file_proto_v1_node_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RoutingInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoutingInfo) ProtoMessage() {}

func (x *RoutingInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_node_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoutingInfo.ProtoReflect.Descriptor instead.
func (*RoutingInfo) Descriptor() ([]byte, []int) {
	return file_proto_v1_node_proto_rawDescGZIP(), []int{30}
}

func (x *RoutingInfo) GetRoutingTableSize() int32 {
	if x != nil {
		return x.RoutingTableSize
	}
	return 0
}

func (x *RoutingInfo) GetProtocols() []string {
	if x != nil {
		return x.Protocols
	}
	return nil
}

func (x *RoutingInfo) GetIsReachable() bool {
	if x != nil {
		return x.IsReachable
	}
	return false
}

func (x *RoutingInfo) GetNatStatus() string {
	if x != nil {
		return x.NatStatus
	}
	return ""
}

// Peer discovery
type DiscoverPeersRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Method        string                 `protobuf:"bytes,1,opt,name=method,proto3" json:"method,omitempty"` // mdns, dht, bootstrap, all
	Limit         int32                  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Timeout       *durationpb.Duration   `protobuf:"bytes,3,opt,name=timeout,proto3" json:"timeout,omitempty"`
	Filters       map[string]string      `protobuf:"bytes,4,rep,name=filters,proto3" json:"filters,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DiscoverPeersRequest) Reset() {
	*x = DiscoverPeersRequest{}
	mi := &file_proto_v1_node_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DiscoverPeersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiscoverPeersRequest) ProtoMessage() {}

func (x *DiscoverPeersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_node_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiscoverPeersRequest.ProtoReflect.Descriptor instead.
func (*DiscoverPeersRequest) Descriptor() ([]byte, []int) {
	return file_proto_v1_node_proto_rawDescGZIP(), []int{31}
}

func (x *DiscoverPeersRequest) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *DiscoverPeersRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *DiscoverPeersRequest) GetTimeout() *durationpb.Duration {
	if x != nil {
		return x.Timeout
	}
	return nil
}

func (x *DiscoverPeersRequest) GetFilters() map[string]string {
	if x != nil {
		return x.Filters
	}
	return nil
}

type DiscoverPeersResponse struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Peers           []*DiscoveredPeer      `protobuf:"bytes,1,rep,name=peers,proto3" json:"peers,omitempty"`
	MethodUsed      string                 `protobuf:"bytes,2,opt,name=method_used,json=methodUsed,proto3" json:"method_used,omitempty"`
	TotalDiscovered int32                  `protobuf:"varint,3,opt,name=total_discovered,json=totalDiscovered,proto3" json:"total_discovered,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *DiscoverPeersResponse) Reset() {
	*x = DiscoverPeersResponse{}
	mi := &file_proto_v1_node_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DiscoverPeersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiscoverPeersResponse) ProtoMessage() {}

func (x *DiscoverPeersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_node_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiscoverPeersResponse.ProtoReflect.Descriptor instead.
func (*DiscoverPeersResponse) Descriptor() ([]byte, []int) {
	return file_proto_v1_node_proto_rawDescGZIP(), []int{32}
}

func (x *DiscoverPeersResponse) GetPeers() []*DiscoveredPeer {
	if x != nil {
		return x.Peers
	}
	return nil
}

func (x *DiscoverPeersResponse) GetMethodUsed() string {
	if x != nil {
		return x.MethodUsed
	}
	return ""
}

func (x *DiscoverPeersResponse) GetTotalDiscovered() int32 {
	if x != nil {
		return x.TotalDiscovered
	}
	return 0
}

type DiscoveredPeer struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Addrs         []string               `protobuf:"bytes,2,rep,name=addrs,proto3" json:"addrs,omitempty"`
	Source        string                 `protobuf:"bytes,3,opt,name=source,proto3" json:"source,omitempty"`           // mdns, dht, bootstrap
	Confidence    float64                `protobuf:"fixed64,4,opt,name=confidence,proto3" json:"confidence,omitempty"` // 0.0 to 1.0
	Metadata      map[string]string      `protobuf:"bytes,5,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DiscoveredPeer) Reset() {
	*x = DiscoveredPeer{}
	mi := &file_proto_v1_node_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DiscoveredPeer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiscoveredPeer) ProtoMessage() {}

func (x *DiscoveredPeer) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_node_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiscoveredPeer.ProtoReflect.Descriptor instead.
func (*DiscoveredPeer) Descriptor() ([]byte, []int) {
	return file_proto_v1_node_proto_rawDescGZIP(), []int{33}
}

func (x *DiscoveredPeer) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DiscoveredPeer) GetAddrs() []string {
	if x != nil {
		return x.Addrs
	}
	return nil
}

func (x *DiscoveredPeer) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *DiscoveredPeer) GetConfidence() float64 {
	if x != nil {
		return x.Confidence
	}
	return 0
}

func (x *DiscoveredPeer) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// Streaming events
type StreamPeerEventsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EventTypes    []string               `protobuf:"bytes,1,rep,name=event_types,json=eventTypes,proto3" json:"event_types,omitempty"` // connected, disconnected, discovered
	PeerIds       []string               `protobuf:"bytes,2,rep,name=peer_ids,json=peerIds,proto3" json:"peer_ids,omitempty"`          // Empty for all peers
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamPeerEventsRequest) Reset() {
	*x = StreamPeerEventsRequest{}
	mi := &file_proto_v1_node_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamPeerEventsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamPeerEventsRequest) ProtoMessage() {}

func (x *StreamPeerEventsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_node_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamPeerEventsRequest.ProtoReflect.Descriptor instead.
func (*StreamPeerEventsRequest) Descriptor() ([]byte, []int) {
	return file_proto_v1_node_proto_rawDescGZIP(), []int{34}
}

func (x *StreamPeerEventsRequest) GetEventTypes() []string {
	if x != nil {
		return x.EventTypes
	}
	return nil
}

func (x *StreamPeerEventsRequest) GetPeerIds() []string {
	if x != nil {
		return x.PeerIds
	}
	return nil
}

type PeerEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          string                 `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	PeerId        string                 `protobuf:"bytes,2,opt,name=peer_id,json=peerId,proto3" json:"peer_id,omitempty"`
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Data          *structpb.Struct       `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PeerEvent) Reset() {
	*x = PeerEvent{}
	mi := &file_proto_v1_node_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PeerEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PeerEvent) ProtoMessage() {}

func (x *PeerEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_node_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PeerEvent.ProtoReflect.Descriptor instead.
func (*PeerEvent) Descriptor() ([]byte, []int) {
	return file_proto_v1_node_proto_rawDescGZIP(), []int{35}
}

func (x *PeerEvent) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *PeerEvent) GetPeerId() string {
	if x != nil {
		return x.PeerId
	}
	return ""
}

func (x *PeerEvent) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *PeerEvent) GetData() *structpb.Struct {
	if x != nil {
		return x.Data
	}
	return nil
}

type StreamNetworkMetricsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Interval      *durationpb.Duration   `protobuf:"bytes,1,opt,name=interval,proto3" json:"interval,omitempty"`
	Metrics       []string               `protobuf:"bytes,2,rep,name=metrics,proto3" json:"metrics,omitempty"` // bandwidth, connections, latency
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamNetworkMetricsRequest) Reset() {
	*x = StreamNetworkMetricsRequest{}
	mi := &file_proto_v1_node_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamNetworkMetricsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamNetworkMetricsRequest) ProtoMessage() {}

func (x *StreamNetworkMetricsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_node_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamNetworkMetricsRequest.ProtoReflect.Descriptor instead.
func (*StreamNetworkMetricsRequest) Descriptor() ([]byte, []int) {
	return file_proto_v1_node_proto_rawDescGZIP(), []int{36}
}

func (x *StreamNetworkMetricsRequest) GetInterval() *durationpb.Duration {
	if x != nil {
		return x.Interval
	}
	return nil
}

func (x *StreamNetworkMetricsRequest) GetMetrics() []string {
	if x != nil {
		return x.Metrics
	}
	return nil
}

var File_proto_v1_node_proto protoreflect.FileDescriptor

const file_proto_v1_node_proto_rawDesc = "" +
	"\n" +
	"\x13proto/v1/node.proto\x12\x18blackhole.plugin.node.v1\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1cgoogle/protobuf/struct.proto\x1a\x1egoogle/protobuf/duration.proto\"r\n" +
	"\x11InitializeRequest\x12<\n" +
	"\x06config\x18\x01 \x01(\v2$.blackhole.plugin.node.v1.NodeConfigR\x06config\x12\x1f\n" +
	"\vinstance_id\x18\x02 \x01(\tR\n" +
	"instanceId\"\xd6\x03\n" +
	"\n" +
	"NodeConfig\x12\x17\n" +
	"\anode_id\x18\x01 \x01(\tR\x06nodeId\x12\x19\n" +
	"\bp2p_port\x18\x02 \x01(\x05R\ap2pPort\x12)\n" +
	"\x10listen_addresses\x18\x03 \x03(\tR\x0flistenAddresses\x12'\n" +
	"\x0fbootstrap_peers\x18\x04 \x03(\tR\x0ebootstrapPeers\x12)\n" +
	"\x10enable_discovery\x18\x05 \x01(\bR\x0fenableDiscovery\x12)\n" +
	"\x10discovery_method\x18\x06 \x01(\tR\x0fdiscoveryMethod\x12\x1b\n" +
	"\tmax_peers\x18\a \x01(\x05R\bmaxPeers\x12,\n" +
	"\x12max_bandwidth_mbps\x18\b \x01(\x05R\x10maxBandwidthMbps\x12H\n" +
	"\x12connection_timeout\x18\t \x01(\v2\x19.google.protobuf.DurationR\x11connectionTimeout\x12+\n" +
	"\x11enable_encryption\x18\n" +
	" \x01(\bR\x10enableEncryption\x12(\n" +
	"\x10private_key_path\x18\v \x01(\tR\x0eprivateKeyPath\"\x81\x01\n" +
	"\x12InitializeResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12\x17\n" +
	"\apeer_id\x18\x03 \x01(\tR\x06peerId\x12\x1e\n" +
	"\n" +
	"multiaddrs\x18\x04 \x03(\tR\n" +
	"multiaddrs\"t\n" +
	"\fStartRequest\x12$\n" +
	"\x0ewait_for_ready\x18\x01 \x01(\bR\fwaitForReady\x12>\n" +
	"\rready_timeout\x18\x02 \x01(\v2\x19.google.protobuf.DurationR\freadyTimeout\"\xcf\x01\n" +
	"\rStartResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12@\n" +
	"\tendpoints\x18\x03 \x03(\v2\".blackhole.plugin.node.v1.EndpointR\tendpoints\x12H\n" +
	"\treadiness\x18\x04 \x01(\v2*.blackhole.plugin.node.v1.NetworkReadinessR\treadiness\"X\n" +
	"\bEndpoint\x12\x1a\n" +
	"\bprotocol\x18\x01 \x01(\tR\bprotocol\x12\x18\n" +
	"\aaddress\x18\x02 \x01(\tR\aaddress\x12\x16\n" +
	"\x06secure\x18\x03 \x01(\bR\x06secure\"\x97\x01\n" +
	"\x10NetworkReadiness\x12!\n" +
	"\fis_reachable\x18\x01 \x01(\bR\visReachable\x12\"\n" +
	"\rhas_public_ip\x18\x02 \x01(\bR\vhasPublicIp\x12\x19\n" +
	"\bnat_type\x18\x03 \x01(\tR\anatType\x12!\n" +
	"\fpublic_addrs\x18\x04 \x03(\tR\vpublicAddrs\"{\n" +
	"\vStopRequest\x12\x14\n" +
	"\x05force\x18\x01 \x01(\bR\x05force\x12>\n" +
	"\rdrain_timeout\x18\x02 \x01(\v2\x19.google.protobuf.DurationR\fdrainTimeout\x12\x16\n" +
	"\x06reason\x18\x03 \x01(\tR\x06reason\"q\n" +
	"\fStopResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12-\n" +
	"\x12connections_closed\x18\x03 \x01(\x05R\x11connectionsClosed\"E\n" +
	"\x12HealthCheckRequest\x12/\n" +
	"\x13include_diagnostics\x18\x01 \x01(\bR\x12includeDiagnostics\"\x97\x01\n" +
	"\x13HealthCheckResponse\x12\x18\n" +
	"\ahealthy\x18\x01 \x01(\bR\ahealthy\x12\x16\n" +
	"\x06status\x18\x02 \x01(\tR\x06status\x12N\n" +
	"\vdiagnostics\x18\x03 \x01(\v2,.blackhole.plugin.node.v1.NetworkDiagnosticsR\vdiagnostics\"\x87\x03\n" +
	"\x12NetworkDiagnostics\x12-\n" +
	"\x12active_connections\x18\x01 \x01(\x05R\x11activeConnections\x12/\n" +
	"\x13pending_connections\x18\x02 \x01(\x05R\x12pendingConnections\x120\n" +
	"\x14bandwidth_usage_mbps\x18\x03 \x01(\x01R\x12bandwidthUsageMbps\x12*\n" +
	"\x11cpu_usage_percent\x18\x04 \x01(\x01R\x0fcpuUsagePercent\x12&\n" +
	"\x0fmemory_usage_mb\x18\x05 \x01(\x01R\rmemoryUsageMb\x12P\n" +
	"\x06issues\x18\x06 \x03(\v28.blackhole.plugin.node.v1.NetworkDiagnostics.IssuesEntryR\x06issues\x1a9\n" +
	"\vIssuesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x10\n" +
	"\x0eGetInfoRequest\"\xc9\x02\n" +
	"\x0fGetInfoResponse\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x18\n" +
	"\aversion\x18\x02 \x01(\tR\aversion\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12\x17\n" +
	"\apeer_id\x18\x04 \x01(\tR\x06peerId\x12\x1c\n" +
	"\tprotocols\x18\x05 \x03(\tR\tprotocols\x12!\n" +
	"\flisten_addrs\x18\x06 \x03(\tR\vlistenAddrs\x12N\n" +
	"\fcapabilities\x18\a \x01(\v2*.blackhole.plugin.node.v1.NodeCapabilitiesR\fcapabilities\x12<\n" +
	"\x06status\x18\b \x01(\v2$.blackhole.plugin.node.v1.NodeStatusR\x06status\"\xec\x01\n" +
	"\x10NodeCapabilities\x12%\n" +
	"\x0esupports_relay\x18\x01 \x01(\bR\rsupportsRelay\x124\n" +
	"\x16supports_nat_traversal\x18\x02 \x01(\bR\x14supportsNatTraversal\x12!\n" +
	"\fsupports_dht\x18\x03 \x01(\bR\vsupportsDht\x12'\n" +
	"\x0fsupports_pubsub\x18\x04 \x01(\bR\x0esupportsPubsub\x12/\n" +
	"\x13transport_protocols\x18\x05 \x03(\tR\x12transportProtocols\"\x9e\x01\n" +
	"\n" +
	"NodeStatus\x12\x14\n" +
	"\x05state\x18\x01 \x01(\tR\x05state\x129\n" +
	"\n" +
	"started_at\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\tstartedAt\x12%\n" +
	"\x0euptime_seconds\x18\x03 \x01(\x03R\ruptimeSeconds\x12\x18\n" +
	"\aversion\x18\x04 \x01(\tR\aversion\"\x8e\x01\n" +
	"\x10ListPeersRequest\x12#\n" +
	"\rstatus_filter\x18\x01 \x01(\tR\fstatusFilter\x12\x14\n" +
	"\x05limit\x18\x02 \x01(\x05R\x05limit\x12\x16\n" +
	"\x06offset\x18\x03 \x01(\x05R\x06offset\x12'\n" +
	"\x0finclude_metrics\x18\x04 \x01(\bR\x0eincludeMetrics\"\xa9\x01\n" +
	"\x11ListPeersResponse\x128\n" +
	"\x05peers\x18\x01 \x03(\v2\".blackhole.plugin.node.v1.PeerInfoR\x05peers\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCount\x129\n" +
	"\x05stats\x18\x03 \x01(\v2#.blackhole.plugin.node.v1.PeerStatsR\x05stats\"\xcf\x03\n" +
	"\bPeerInfo\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x14\n" +
	"\x05addrs\x18\x02 \x03(\tR\x05addrs\x12\x16\n" +
	"\x06status\x18\x03 \x01(\tR\x06status\x12=\n" +
	"\fconnected_at\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\vconnectedAt\x127\n" +
	"\tlast_seen\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\blastSeen\x12?\n" +
	"\ametrics\x18\x06 \x01(\v2%.blackhole.plugin.node.v1.PeerMetricsR\ametrics\x12\x1c\n" +
	"\tprotocols\x18\a \x03(\tR\tprotocols\x12#\n" +
	"\ragent_version\x18\b \x01(\tR\fagentVersion\x12L\n" +
	"\bmetadata\x18\t \x03(\v20.blackhole.plugin.node.v1.PeerInfo.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xe5\x01\n" +
	"\vPeerMetrics\x12\x1d\n" +
	"\n" +
	"bytes_sent\x18\x01 \x01(\x03R\tbytesSent\x12%\n" +
	"\x0ebytes_received\x18\x02 \x01(\x03R\rbytesReceived\x12#\n" +
	"\rmessages_sent\x18\x03 \x01(\x03R\fmessagesSent\x12+\n" +
	"\x11messages_received\x18\x04 \x01(\x03R\x10messagesReceived\x12\x1d\n" +
	"\n" +
	"latency_ms\x18\x05 \x01(\x01R\tlatencyMs\x12\x1f\n" +
	"\vpacket_loss\x18\x06 \x01(\x01R\n" +
	"packetLoss\"\x8e\x01\n" +
	"\tPeerStats\x12\x1f\n" +
	"\vtotal_known\x18\x01 \x01(\x05R\n" +
	"totalKnown\x12\x1c\n" +
	"\tconnected\x18\x02 \x01(\x05R\tconnected\x12\x1e\n" +
	"\n" +
	"connecting\x18\x03 \x01(\x05R\n" +
	"connecting\x12\"\n" +
	"\fdisconnected\x18\x04 \x01(\x05R\fdisconnected\"\x8d\x02\n" +
	"\x12ConnectPeerRequest\x12\x17\n" +
	"\apeer_id\x18\x01 \x01(\tR\x06peerId\x12\x14\n" +
	"\x05addrs\x18\x02 \x03(\tR\x05addrs\x123\n" +
	"\atimeout\x18\x03 \x01(\v2\x19.google.protobuf.DurationR\atimeout\x12V\n" +
	"\bmetadata\x18\x04 \x03(\v2:.blackhole.plugin.node.v1.ConnectPeerRequest.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x8a\x01\n" +
	"\x13ConnectPeerResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12?\n" +
	"\tpeer_info\x18\x03 \x01(\v2\".blackhole.plugin.node.v1.PeerInfoR\bpeerInfo\"f\n" +
	"\x15DisconnectPeerRequest\x12\x17\n" +
	"\apeer_id\x18\x01 \x01(\tR\x06peerId\x12\x16\n" +
	"\x06reason\x18\x02 \x01(\tR\x06reason\x12\x1c\n" +
	"\tblacklist\x18\x03 \x01(\bR\tblacklist\"L\n" +
	"\x16DisconnectPeerResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"\x94\x01\n" +
	"\x17GetNetworkStatusRequest\x12#\n" +
	"\rinclude_peers\x18\x01 \x01(\bR\fincludePeers\x12+\n" +
	"\x11include_bandwidth\x18\x02 \x01(\bR\x10includeBandwidth\x12'\n" +
	"\x0finclude_routing\x18\x03 \x01(\bR\x0eincludeRouting\"\xa8\x02\n" +
	"\x18GetNetworkStatusResponse\x12?\n" +
	"\x06health\x18\x01 \x01(\v2'.blackhole.plugin.node.v1.NetworkHealthR\x06health\x12B\n" +
	"\ametrics\x18\x02 \x01(\v2(.blackhole.plugin.node.v1.NetworkMetricsR\ametrics\x12F\n" +
	"\tbandwidth\x18\x03 \x01(\v2(.blackhole.plugin.node.v1.BandwidthStatsR\tbandwidth\x12?\n" +
	"\arouting\x18\x04 \x01(\v2%.blackhole.plugin.node.v1.RoutingInfoR\arouting\"\x94\x01\n" +
	"\rNetworkHealth\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status\x12\x14\n" +
	"\x05score\x18\x02 \x01(\x01R\x05score\x12\x16\n" +
	"\x06issues\x18\x03 \x03(\tR\x06issues\x12=\n" +
	"\flast_updated\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\vlastUpdated\"\xee\x02\n" +
	"\x0eNetworkMetrics\x12+\n" +
	"\x11total_connections\x18\x01 \x01(\x03R\x10totalConnections\x12-\n" +
	"\x12active_connections\x18\x02 \x01(\x03R\x11activeConnections\x12-\n" +
	"\x12failed_connections\x18\x03 \x01(\x03R\x11failedConnections\x12\x1d\n" +
	"\n" +
	"bytes_sent\x18\x04 \x01(\x03R\tbytesSent\x12%\n" +
	"\x0ebytes_received\x18\x05 \x01(\x03R\rbytesReceived\x12#\n" +
	"\rmessages_sent\x18\x06 \x01(\x03R\fmessagesSent\x12+\n" +
	"\x11messages_received\x18\a \x01(\x03R\x10messagesReceived\x129\n" +
	"\n" +
	"started_at\x18\b \x01(\v2\x1a.google.protobuf.TimestampR\tstartedAt\"\xad\x01\n" +
	"\x0eBandwidthStats\x12 \n" +
	"\frate_in_mbps\x18\x01 \x01(\x01R\n" +
	"rateInMbps\x12\"\n" +
	"\rrate_out_mbps\x18\x02 \x01(\x01R\vrateOutMbps\x12\x19\n" +
	"\btotal_in\x18\x03 \x01(\x03R\atotalIn\x12\x1b\n" +
	"\ttotal_out\x18\x04 \x01(\x03R\btotalOut\x12\x1d\n" +
	"\n" +
	"limit_mbps\x18\x05 \x01(\x01R\tlimitMbps\"\x9b\x01\n" +
	"\vRoutingInfo\x12,\n" +
	"\x12routing_table_size\x18\x01 \x01(\x05R\x10routingTableSize\x12\x1c\n" +
	"\tprotocols\x18\x02 \x03(\tR\tprotocols\x12!\n" +
	"\fis_reachable\x18\x03 \x01(\bR\visReachable\x12\x1d\n" +
	"\n" +
	"nat_status\x18\x04 \x01(\tR\tnatStatus\"\x8c\x02\n" +
	"\x14DiscoverPeersRequest\x12\x16\n" +
	"\x06method\x18\x01 \x01(\tR\x06method\x12\x14\n" +
	"\x05limit\x18\x02 \x01(\x05R\x05limit\x123\n" +
	"\atimeout\x18\x03 \x01(\v2\x19.google.protobuf.DurationR\atimeout\x12U\n" +
	"\afilters\x18\x04 \x03(\v2;.blackhole.plugin.node.v1.DiscoverPeersRequest.FiltersEntryR\afilters\x1a:\n" +
	"\fFiltersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xa3\x01\n" +
	"\x15DiscoverPeersResponse\x12>\n" +
	"\x05peers\x18\x01 \x03(\v2(.blackhole.plugin.node.v1.DiscoveredPeerR\x05peers\x12\x1f\n" +
	"\vmethod_used\x18\x02 \x01(\tR\n" +
	"methodUsed\x12)\n" +
	"\x10total_discovered\x18\x03 \x01(\x05R\x0ftotalDiscovered\"\xff\x01\n" +
	"\x0eDiscoveredPeer\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x14\n" +
	"\x05addrs\x18\x02 \x03(\tR\x05addrs\x12\x16\n" +
	"\x06source\x18\x03 \x01(\tR\x06source\x12\x1e\n" +
	"\n" +
	"confidence\x18\x04 \x01(\x01R\n" +
	"confidence\x12R\n" +
	"\bmetadata\x18\x05 \x03(\v26.blackhole.plugin.node.v1.DiscoveredPeer.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"U\n" +
	"\x17StreamPeerEventsRequest\x12\x1f\n" +
	"\vevent_types\x18\x01 \x03(\tR\n" +
	"eventTypes\x12\x19\n" +
	"\bpeer_ids\x18\x02 \x03(\tR\apeerIds\"\x9f\x01\n" +
	"\tPeerEvent\x12\x12\n" +
	"\x04type\x18\x01 \x01(\tR\x04type\x12\x17\n" +
	"\apeer_id\x18\x02 \x01(\tR\x06peerId\x128\n" +
	"\ttimestamp\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12+\n" +
	"\x04data\x18\x04 \x01(\v2\x17.google.protobuf.StructR\x04data\"n\n" +
	"\x1bStreamNetworkMetricsRequest\x125\n" +
	"\binterval\x18\x01 \x01(\v2\x19.google.protobuf.DurationR\binterval\x12\x18\n" +
	"\ametrics\x18\x02 \x03(\tR\ametrics2\x8f\n" +
	"\n" +
	"\n" +
	"NodePlugin\x12g\n" +
	"\n" +
	"Initialize\x12+.blackhole.plugin.node.v1.InitializeRequest\x1a,.blackhole.plugin.node.v1.InitializeResponse\x12X\n" +
	"\x05Start\x12&.blackhole.plugin.node.v1.StartRequest\x1a'.blackhole.plugin.node.v1.StartResponse\x12U\n" +
	"\x04Stop\x12%.blackhole.plugin.node.v1.StopRequest\x1a&.blackhole.plugin.node.v1.StopResponse\x12j\n" +
	"\vHealthCheck\x12,.blackhole.plugin.node.v1.HealthCheckRequest\x1a-.blackhole.plugin.node.v1.HealthCheckResponse\x12^\n" +
	"\aGetInfo\x12(.blackhole.plugin.node.v1.GetInfoRequest\x1a).blackhole.plugin.node.v1.GetInfoResponse\x12d\n" +
	"\tListPeers\x12*.blackhole.plugin.node.v1.ListPeersRequest\x1a+.blackhole.plugin.node.v1.ListPeersResponse\x12j\n" +
	"\vConnectPeer\x12,.blackhole.plugin.node.v1.ConnectPeerRequest\x1a-.blackhole.plugin.node.v1.ConnectPeerResponse\x12s\n" +
	"\x0eDisconnectPeer\x12/.blackhole.plugin.node.v1.DisconnectPeerRequest\x1a0.blackhole.plugin.node.v1.DisconnectPeerResponse\x12y\n" +
	"\x10GetNetworkStatus\x121.blackhole.plugin.node.v1.GetNetworkStatusRequest\x1a2.blackhole.plugin.node.v1.GetNetworkStatusResponse\x12p\n" +
	"\rDiscoverPeers\x12..blackhole.plugin.node.v1.DiscoverPeersRequest\x1a/.blackhole.plugin.node.v1.DiscoverPeersResponse\x12l\n" +
	"\x10StreamPeerEvents\x121.blackhole.plugin.node.v1.StreamPeerEventsRequest\x1a#.blackhole.plugin.node.v1.PeerEvent0\x01\x12y\n" +
	"\x14StreamNetworkMetrics\x125.blackhole.plugin.node.v1.StreamNetworkMetricsRequest\x1a(.blackhole.plugin.node.v1.NetworkMetrics0\x01BIZGgithub.com/handcraftdev/blackhole/core/pkg/plugins/node/proto/v1;nodev1b\x06proto3"

var (
	file_proto_v1_node_proto_rawDescOnce sync.Once
	file_proto_v1_node_proto_rawDescData []byte
)

func file_proto_v1_node_proto_rawDescGZIP() []byte {
	file_proto_v1_node_proto_rawDescOnce.Do(func() {
		file_proto_v1_node_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_v1_node_proto_rawDesc), len(file_proto_v1_node_proto_rawDesc)))
	})
	return file_proto_v1_node_proto_rawDescData
}

var file_proto_v1_node_proto_msgTypes = make([]protoimpl.MessageInfo, 42)
var file_proto_v1_node_proto_goTypes = []any{
	(*InitializeRequest)(nil),           // 0: blackhole.plugin.node.v1.InitializeRequest
	(*NodeConfig)(nil),                  // 1: blackhole.plugin.node.v1.NodeConfig
	(*InitializeResponse)(nil),          // 2: blackhole.plugin.node.v1.InitializeResponse
	(*StartRequest)(nil),                // 3: blackhole.plugin.node.v1.StartRequest
	(*StartResponse)(nil),               // 4: blackhole.plugin.node.v1.StartResponse
	(*Endpoint)(nil),                    // 5: blackhole.plugin.node.v1.Endpoint
	(*NetworkReadiness)(nil),            // 6: blackhole.plugin.node.v1.NetworkReadiness
	(*StopRequest)(nil),                 // 7: blackhole.plugin.node.v1.StopRequest
	(*StopResponse)(nil),                // 8: blackhole.plugin.node.v1.StopResponse
	(*HealthCheckRequest)(nil),          // 9: blackhole.plugin.node.v1.HealthCheckRequest
	(*HealthCheckResponse)(nil),         // 10: blackhole.plugin.node.v1.HealthCheckResponse
	(*NetworkDiagnostics)(nil),          // 11: blackhole.plugin.node.v1.NetworkDiagnostics
	(*GetInfoRequest)(nil),              // 12: blackhole.plugin.node.v1.GetInfoRequest
	(*GetInfoResponse)(nil),             // 13: blackhole.plugin.node.v1.GetInfoResponse
	(*NodeCapabilities)(nil),            // 14: blackhole.plugin.node.v1.NodeCapabilities
	(*NodeStatus)(nil),                  // 15: blackhole.plugin.node.v1.NodeStatus
	(*ListPeersRequest)(nil),            // 16: blackhole.plugin.node.v1.ListPeersRequest
	(*ListPeersResponse)(nil),           // 17: blackhole.plugin.node.v1.ListPeersResponse
	(*PeerInfo)(nil),                    // 18: blackhole.plugin.node.v1.PeerInfo
	(*PeerMetrics)(nil),                 // 19: blackhole.plugin.node.v1.PeerMetrics
	(*PeerStats)(nil),                   // 20: blackhole.plugin.node.v1.PeerStats
	(*ConnectPeerRequest)(nil),          // 21: blackhole.plugin.node.v1.ConnectPeerRequest
	(*ConnectPeerResponse)(nil),         // 22: blackhole.plugin.node.v1.ConnectPeerResponse
	(*DisconnectPeerRequest)(nil),       // 23: blackhole.plugin.node.v1.DisconnectPeerRequest
	(*DisconnectPeerResponse)(nil),      // 24: blackhole.plugin.node.v1.DisconnectPeerResponse
	(*GetNetworkStatusRequest)(nil),     // 25: blackhole.plugin.node.v1.GetNetworkStatusRequest
	(*GetNetworkStatusResponse)(nil),    // 26: blackhole.plugin.node.v1.GetNetworkStatusResponse
	(*NetworkHealth)(nil),               // 27: blackhole.plugin.node.v1.NetworkHealth
	(*NetworkMetrics)(nil),              // 28: blackhole.plugin.node.v1.NetworkMetrics
	(*BandwidthStats)(nil),              // 29: blackhole.plugin.node.v1.BandwidthStats
	(*RoutingInfo)(nil),                 // 30: blackhole.plugin.node.v1.RoutingInfo
	(*DiscoverPeersRequest)(nil),        // 31: blackhole.plugin.node.v1.DiscoverPeersRequest
	(*DiscoverPeersResponse)(nil),       // 32: blackhole.plugin.node.v1.DiscoverPeersResponse
	(*DiscoveredPeer)(nil),              // 33: blackhole.plugin.node.v1.DiscoveredPeer
	(*StreamPeerEventsRequest)(nil),     // 34: blackhole.plugin.node.v1.StreamPeerEventsRequest
	(*PeerEvent)(nil),                   // 35: blackhole.plugin.node.v1.PeerEvent
	(*StreamNetworkMetricsRequest)(nil), // 36: blackhole.plugin.node.v1.StreamNetworkMetricsRequest
	nil,                                 // 37: blackhole.plugin.node.v1.NetworkDiagnostics.IssuesEntry
	nil,                                 // 38: blackhole.plugin.node.v1.PeerInfo.MetadataEntry
	nil,                                 // 39: blackhole.plugin.node.v1.ConnectPeerRequest.MetadataEntry
	nil,                                 // 40: blackhole.plugin.node.v1.DiscoverPeersRequest.FiltersEntry
	nil,                                 // 41: blackhole.plugin.node.v1.DiscoveredPeer.MetadataEntry
	(*durationpb.Duration)(nil),         // 42: google.protobuf.Duration
	(*timestamppb.Timestamp)(nil),       // 43: google.protobuf.Timestamp
	(*structpb.Struct)(nil),             // 44: google.protobuf.Struct
}
var file_proto_v1_node_proto_depIdxs = []int32{
	1,  // 0: blackhole.plugin.node.v1.InitializeRequest.config:type_name -> blackhole.plugin.node.v1.NodeConfig
	42, // 1: blackhole.plugin.node.v1.NodeConfig.connection_timeout:type_name -> google.protobuf.Duration
	42, // 2: blackhole.plugin.node.v1.StartRequest.ready_timeout:type_name -> google.protobuf.Duration
	5,  // 3: blackhole.plugin.node.v1.StartResponse.endpoints:type_name -> blackhole.plugin.node.v1.Endpoint
	6,  // 4: blackhole.plugin.node.v1.StartResponse.readiness:type_name -> blackhole.plugin.node.v1.NetworkReadiness
	42, // 5: blackhole.plugin.node.v1.StopRequest.drain_timeout:type_name -> google.protobuf.Duration
	11, // 6: blackhole.plugin.node.v1.HealthCheckResponse.diagnostics:type_name -> blackhole.plugin.node.v1.NetworkDiagnostics
	37, // 7: blackhole.plugin.node.v1.NetworkDiagnostics.issues:type_name -> blackhole.plugin.node.v1.NetworkDiagnostics.IssuesEntry
	14, // 8: blackhole.plugin.node.v1.GetInfoResponse.capabilities:type_name -> blackhole.plugin.node.v1.NodeCapabilities
	15, // 9: blackhole.plugin.node.v1.GetInfoResponse.status:type_name -> blackhole.plugin.node.v1.NodeStatus
	43, // 10: blackhole.plugin.node.v1.NodeStatus.started_at:type_name -> google.protobuf.Timestamp
	18, // 11: blackhole.plugin.node.v1.ListPeersResponse.peers:type_name -> blackhole.plugin.node.v1.PeerInfo
	20, // 12: blackhole.plugin.node.v1.ListPeersResponse.stats:type_name -> blackhole.plugin.node.v1.PeerStats
	43, // 13: blackhole.plugin.node.v1.PeerInfo.connected_at:type_name -> google.protobuf.Timestamp
	43, // 14: blackhole.plugin.node.v1.PeerInfo.last_seen:type_name -> google.protobuf.Timestamp
	19, // 15: blackhole.plugin.node.v1.PeerInfo.metrics:type_name -> blackhole.plugin.node.v1.PeerMetrics
	38, // 16: blackhole.plugin.node.v1.PeerInfo.metadata:type_name -> blackhole.plugin.node.v1.PeerInfo.MetadataEntry
	42, // 17: blackhole.plugin.node.v1.ConnectPeerRequest.timeout:type_name -> google.protobuf.Duration
	39, // 18: blackhole.plugin.node.v1.ConnectPeerRequest.metadata:type_name -> blackhole.plugin.node.v1.ConnectPeerRequest.MetadataEntry
	18, // 19: blackhole.plugin.node.v1.ConnectPeerResponse.peer_info:type_name -> blackhole.plugin.node.v1.PeerInfo
	27, // 20: blackhole.plugin.node.v1.GetNetworkStatusResponse.health:type_name -> blackhole.plugin.node.v1.NetworkHealth
	28, // 21: blackhole.plugin.node.v1.GetNetworkStatusResponse.metrics:type_name -> blackhole.plugin.node.v1.NetworkMetrics
	29, // 22: blackhole.plugin.node.v1.GetNetworkStatusResponse.bandwidth:type_name -> blackhole.plugin.node.v1.BandwidthStats
	30, // 23: blackhole.plugin.node.v1.GetNetworkStatusResponse.routing:type_name -> blackhole.plugin.node.v1.RoutingInfo
	43, // 24: blackhole.plugin.node.v1.NetworkHealth.last_updated:type_name -> google.protobuf.Timestamp
	43, // 25: blackhole.plugin.node.v1.NetworkMetrics.started_at:type_name -> google.protobuf.Timestamp
	42, // 26: blackhole.plugin.node.v1.DiscoverPeersRequest.timeout:type_name -> google.protobuf.Duration
	40, // 27: blackhole.plugin.node.v1.DiscoverPeersRequest.filters:type_name -> blackhole.plugin.node.v1.DiscoverPeersRequest.FiltersEntry
	33, // 28: blackhole.plugin.node.v1.DiscoverPeersResponse.peers:type_name -> blackhole.plugin.node.v1.DiscoveredPeer
	41, // 29: blackhole.plugin.node.v1.DiscoveredPeer.metadata:type_name -> blackhole.plugin.node.v1.DiscoveredPeer.MetadataEntry
	43, // 30: blackhole.plugin.node.v1.PeerEvent.timestamp:type_name -> google.protobuf.Timestamp
	44, // 31: blackhole.plugin.node.v1.PeerEvent.data:type_name -> google.protobuf.Struct
	42, // 32: blackhole.plugin.node.v1.StreamNetworkMetricsRequest.interval:type_name -> google.protobuf.Duration
	0,  // 33: blackhole.plugin.node.v1.NodePlugin.Initialize:input_type -> blackhole.plugin.node.v1.InitializeRequest
	3,  // 34: blackhole.plugin.node.v1.NodePlugin.Start:input_type -> blackhole.plugin.node.v1.StartRequest
	7,  // 35: blackhole.plugin.node.v1.NodePlugin.Stop:input_type -> blackhole.plugin.node.v1.StopRequest
	9,  // 36: blackhole.plugin.node.v1.NodePlugin.HealthCheck:input_type -> blackhole.plugin.node.v1.HealthCheckRequest
	12, // 37: blackhole.plugin.node.v1.NodePlugin.GetInfo:input_type -> blackhole.plugin.node.v1.GetInfoRequest
	16, // 38: blackhole.plugin.node.v1.NodePlugin.ListPeers:input_type -> blackhole.plugin.node.v1.ListPeersRequest
	21, // 39: blackhole.plugin.node.v1.NodePlugin.ConnectPeer:input_type -> blackhole.plugin.node.v1.ConnectPeerRequest
	23, // 40: blackhole.plugin.node.v1.NodePlugin.DisconnectPeer:input_type -> blackhole.plugin.node.v1.DisconnectPeerRequest
	25, // 41: blackhole.plugin.node.v1.NodePlugin.GetNetworkStatus:input_type -> blackhole.plugin.node.v1.GetNetworkStatusRequest
	31, // 42: blackhole.plugin.node.v1.NodePlugin.DiscoverPeers:input_type -> blackhole.plugin.node.v1.DiscoverPeersRequest
	34, // 43: blackhole.plugin.node.v1.NodePlugin.StreamPeerEvents:input_type -> blackhole.plugin.node.v1.StreamPeerEventsRequest
	36, // 44: blackhole.plugin.node.v1.NodePlugin.StreamNetworkMetrics:input_type -> blackhole.plugin.node.v1.StreamNetworkMetricsRequest
	2,  // 45: blackhole.plugin.node.v1.NodePlugin.Initialize:output_type -> blackhole.plugin.node.v1.InitializeResponse
	4,  // 46: blackhole.plugin.node.v1.NodePlugin.Start:output_type -> blackhole.plugin.node.v1.StartResponse
	8,  // 47: blackhole.plugin.node.v1.NodePlugin.Stop:output_type -> blackhole.plugin.node.v1.StopResponse
	10, // 48: blackhole.plugin.node.v1.NodePlugin.HealthCheck:output_type -> blackhole.plugin.node.v1.HealthCheckResponse
	13, // 49: blackhole.plugin.node.v1.NodePlugin.GetInfo:output_type -> blackhole.plugin.node.v1.GetInfoResponse
	17, // 50: blackhole.plugin.node.v1.NodePlugin.ListPeers:output_type -> blackhole.plugin.node.v1.ListPeersResponse
	22, // 51: blackhole.plugin.node.v1.NodePlugin.ConnectPeer:output_type -> blackhole.plugin.node.v1.ConnectPeerResponse
	24, // 52: blackhole.plugin.node.v1.NodePlugin.DisconnectPeer:output_type -> blackhole.plugin.node.v1.DisconnectPeerResponse
	26, // 53: blackhole.plugin.node.v1.NodePlugin.GetNetworkStatus:output_type -> blackhole.plugin.node.v1.GetNetworkStatusResponse
	32, // 54: blackhole.plugin.node.v1.NodePlugin.DiscoverPeers:output_type -> blackhole.plugin.node.v1.DiscoverPeersResponse
	35, // 55: blackhole.plugin.node.v1.NodePlugin.StreamPeerEvents:output_type -> blackhole.plugin.node.v1.PeerEvent
	28, // 56: blackhole.plugin.node.v1.NodePlugin.StreamNetworkMetrics:output_type -> blackhole.plugin.node.v1.NetworkMetrics
	45, // [45:57] is the sub-list for method output_type
	33, // [33:45] is the sub-list for method input_type
	33, // [33:33] is the sub-list for extension type_name
	33, // [33:33] is the sub-list for extension extendee
	0,  // [0:33] is the sub-list for field type_name
}

func init() { file_proto_v1_node_proto_init() }
func file_proto_v1_node_proto_init() {
	if File_proto_v1_node_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_v1_node_proto_rawDesc), len(file_proto_v1_node_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   42,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_v1_node_proto_goTypes,
		DependencyIndexes: file_proto_v1_node_proto_depIdxs,
		MessageInfos:      file_proto_v1_node_proto_msgTypes,
	}.Build()
	File_proto_v1_node_proto = out.File
	file_proto_v1_node_proto_goTypes = nil
	file_proto_v1_node_proto_depIdxs = nil
}
