// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: event/v1/event.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type HealthCheckResponse_ServingStatus int32

const (
	HealthCheckResponse_UNKNOWN         HealthCheckResponse_ServingStatus = 0
	HealthCheckResponse_SERVING         HealthCheckResponse_ServingStatus = 1
	HealthCheckResponse_NOT_SERVING     HealthCheckResponse_ServingStatus = 2
	HealthCheckResponse_SERVICE_UNKNOWN HealthCheckResponse_ServingStatus = 3
)

// Enum value maps for HealthCheckResponse_ServingStatus.
var (
	HealthCheckResponse_ServingStatus_name = map[int32]string{
		0: "UNKNOWN",
		1: "SERVING",
		2: "NOT_SERVING",
		3: "SERVICE_UNKNOWN",
	}
	HealthCheckResponse_ServingStatus_value = map[string]int32{
		"UNKNOWN":         0,
		"SERVING":         1,
		"NOT_SERVING":     2,
		"SERVICE_UNKNOWN": 3,
	}
)

func (x HealthCheckResponse_ServingStatus) Enum() *HealthCheckResponse_ServingStatus {
	p := new(HealthCheckResponse_ServingStatus)
	*p = x
	return p
}

func (x HealthCheckResponse_ServingStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HealthCheckResponse_ServingStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_event_v1_event_proto_enumTypes[0].Descriptor()
}

func (HealthCheckResponse_ServingStatus) Type() protoreflect.EnumType {
	return &file_event_v1_event_proto_enumTypes[0]
}

func (x HealthCheckResponse_ServingStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use HealthCheckResponse_ServingStatus.Descriptor instead.
func (HealthCheckResponse_ServingStatus) EnumDescriptor() ([]byte, []int) {
	return file_event_v1_event_proto_rawDescGZIP(), []int{8, 0}
}

// Event message for network transmission
type Event struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Core event metadata
	Id          string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Type        string                 `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Source      string                 `protobuf:"bytes,3,opt,name=source,proto3" json:"source,omitempty"`
	ProcessId   int32                  `protobuf:"varint,4,opt,name=process_id,json=processId,proto3" json:"process_id,omitempty"`
	ServiceName string                 `protobuf:"bytes,5,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"`
	Timestamp   *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Version     string                 `protobuf:"bytes,7,opt,name=version,proto3" json:"version,omitempty"`
	// Event payload and context
	Data     *anypb.Any `protobuf:"bytes,8,opt,name=data,proto3" json:"data,omitempty"`
	Metadata *Metadata  `protobuf:"bytes,9,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// Routing information
	IsLocal       bool   `protobuf:"varint,10,opt,name=is_local,json=isLocal,proto3" json:"is_local,omitempty"`
	TargetService string `protobuf:"bytes,11,opt,name=target_service,json=targetService,proto3" json:"target_service,omitempty"`
	// Delivery information
	DeliveryMode  string       `protobuf:"bytes,12,opt,name=delivery_mode,json=deliveryMode,proto3" json:"delivery_mode,omitempty"`
	RetryPolicy   *RetryPolicy `protobuf:"bytes,13,opt,name=retry_policy,json=retryPolicy,proto3" json:"retry_policy,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Event) Reset() {
	*x = Event{}
	mi := &file_event_v1_event_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_event_v1_event_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_event_v1_event_proto_rawDescGZIP(), []int{0}
}

func (x *Event) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Event) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Event) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *Event) GetProcessId() int32 {
	if x != nil {
		return x.ProcessId
	}
	return 0
}

func (x *Event) GetServiceName() string {
	if x != nil {
		return x.ServiceName
	}
	return ""
}

func (x *Event) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *Event) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *Event) GetData() *anypb.Any {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *Event) GetMetadata() *Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *Event) GetIsLocal() bool {
	if x != nil {
		return x.IsLocal
	}
	return false
}

func (x *Event) GetTargetService() string {
	if x != nil {
		return x.TargetService
	}
	return ""
}

func (x *Event) GetDeliveryMode() string {
	if x != nil {
		return x.DeliveryMode
	}
	return ""
}

func (x *Event) GetRetryPolicy() *RetryPolicy {
	if x != nil {
		return x.RetryPolicy
	}
	return nil
}

// Metadata contains additional context information
type Metadata struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	SessionId     string                 `protobuf:"bytes,2,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	TraceId       string                 `protobuf:"bytes,3,opt,name=trace_id,json=traceId,proto3" json:"trace_id,omitempty"`
	Tags          []string               `protobuf:"bytes,4,rep,name=tags,proto3" json:"tags,omitempty"`
	Priority      int32                  `protobuf:"varint,5,opt,name=priority,proto3" json:"priority,omitempty"`
	Ttl           int64                  `protobuf:"varint,6,opt,name=ttl,proto3" json:"ttl,omitempty"`
	Compressed    bool                   `protobuf:"varint,7,opt,name=compressed,proto3" json:"compressed,omitempty"`
	Custom        map[string]*anypb.Any  `protobuf:"bytes,8,rep,name=custom,proto3" json:"custom,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Metadata) Reset() {
	*x = Metadata{}
	mi := &file_event_v1_event_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Metadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Metadata) ProtoMessage() {}

func (x *Metadata) ProtoReflect() protoreflect.Message {
	mi := &file_event_v1_event_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Metadata.ProtoReflect.Descriptor instead.
func (*Metadata) Descriptor() ([]byte, []int) {
	return file_event_v1_event_proto_rawDescGZIP(), []int{1}
}

func (x *Metadata) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Metadata) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *Metadata) GetTraceId() string {
	if x != nil {
		return x.TraceId
	}
	return ""
}

func (x *Metadata) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *Metadata) GetPriority() int32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *Metadata) GetTtl() int64 {
	if x != nil {
		return x.Ttl
	}
	return 0
}

func (x *Metadata) GetCompressed() bool {
	if x != nil {
		return x.Compressed
	}
	return false
}

func (x *Metadata) GetCustom() map[string]*anypb.Any {
	if x != nil {
		return x.Custom
	}
	return nil
}

// RetryPolicy defines behavior for handling failed event deliveries
type RetryPolicy struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	MaxAttempts    int32                  `protobuf:"varint,1,opt,name=max_attempts,json=maxAttempts,proto3" json:"max_attempts,omitempty"`
	InitialDelayMs int64                  `protobuf:"varint,2,opt,name=initial_delay_ms,json=initialDelayMs,proto3" json:"initial_delay_ms,omitempty"`
	MaxDelayMs     int64                  `protobuf:"varint,3,opt,name=max_delay_ms,json=maxDelayMs,proto3" json:"max_delay_ms,omitempty"`
	BackoffFactor  float64                `protobuf:"fixed64,4,opt,name=backoff_factor,json=backoffFactor,proto3" json:"backoff_factor,omitempty"`
	Jitter         bool                   `protobuf:"varint,5,opt,name=jitter,proto3" json:"jitter,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *RetryPolicy) Reset() {
	*x = RetryPolicy{}
	mi := &file_event_v1_event_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RetryPolicy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetryPolicy) ProtoMessage() {}

func (x *RetryPolicy) ProtoReflect() protoreflect.Message {
	mi := &file_event_v1_event_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetryPolicy.ProtoReflect.Descriptor instead.
func (*RetryPolicy) Descriptor() ([]byte, []int) {
	return file_event_v1_event_proto_rawDescGZIP(), []int{2}
}

func (x *RetryPolicy) GetMaxAttempts() int32 {
	if x != nil {
		return x.MaxAttempts
	}
	return 0
}

func (x *RetryPolicy) GetInitialDelayMs() int64 {
	if x != nil {
		return x.InitialDelayMs
	}
	return 0
}

func (x *RetryPolicy) GetMaxDelayMs() int64 {
	if x != nil {
		return x.MaxDelayMs
	}
	return 0
}

func (x *RetryPolicy) GetBackoffFactor() float64 {
	if x != nil {
		return x.BackoffFactor
	}
	return 0
}

func (x *RetryPolicy) GetJitter() bool {
	if x != nil {
		return x.Jitter
	}
	return false
}

// PublishEventRequest for publishing a single event
type PublishEventRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Event         *Event                 `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PublishEventRequest) Reset() {
	*x = PublishEventRequest{}
	mi := &file_event_v1_event_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PublishEventRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishEventRequest) ProtoMessage() {}

func (x *PublishEventRequest) ProtoReflect() protoreflect.Message {
	mi := &file_event_v1_event_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishEventRequest.ProtoReflect.Descriptor instead.
func (*PublishEventRequest) Descriptor() ([]byte, []int) {
	return file_event_v1_event_proto_rawDescGZIP(), []int{3}
}

func (x *PublishEventRequest) GetEvent() *Event {
	if x != nil {
		return x.Event
	}
	return nil
}

// PublishEventResponse for single event publishing
type PublishEventResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	EventId       string                 `protobuf:"bytes,3,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PublishEventResponse) Reset() {
	*x = PublishEventResponse{}
	mi := &file_event_v1_event_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PublishEventResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishEventResponse) ProtoMessage() {}

func (x *PublishEventResponse) ProtoReflect() protoreflect.Message {
	mi := &file_event_v1_event_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishEventResponse.ProtoReflect.Descriptor instead.
func (*PublishEventResponse) Descriptor() ([]byte, []int) {
	return file_event_v1_event_proto_rawDescGZIP(), []int{4}
}

func (x *PublishEventResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *PublishEventResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *PublishEventResponse) GetEventId() string {
	if x != nil {
		return x.EventId
	}
	return ""
}

// SubscribeRequest for subscribing to events
type SubscribeRequest struct {
	state       protoimpl.MessageState `protogen:"open.v1"`
	EventType   string                 `protobuf:"bytes,1,opt,name=event_type,json=eventType,proto3" json:"event_type,omitempty"`
	EventTypes  []string               `protobuf:"bytes,2,rep,name=event_types,json=eventTypes,proto3" json:"event_types,omitempty"`
	ServiceName string                 `protobuf:"bytes,3,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"`
	// Optional filters
	Tags          []string `protobuf:"bytes,4,rep,name=tags,proto3" json:"tags,omitempty"`
	MinPriority   int32    `protobuf:"varint,5,opt,name=min_priority,json=minPriority,proto3" json:"min_priority,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubscribeRequest) Reset() {
	*x = SubscribeRequest{}
	mi := &file_event_v1_event_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscribeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeRequest) ProtoMessage() {}

func (x *SubscribeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_event_v1_event_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeRequest.ProtoReflect.Descriptor instead.
func (*SubscribeRequest) Descriptor() ([]byte, []int) {
	return file_event_v1_event_proto_rawDescGZIP(), []int{5}
}

func (x *SubscribeRequest) GetEventType() string {
	if x != nil {
		return x.EventType
	}
	return ""
}

func (x *SubscribeRequest) GetEventTypes() []string {
	if x != nil {
		return x.EventTypes
	}
	return nil
}

func (x *SubscribeRequest) GetServiceName() string {
	if x != nil {
		return x.ServiceName
	}
	return ""
}

func (x *SubscribeRequest) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *SubscribeRequest) GetMinPriority() int32 {
	if x != nil {
		return x.MinPriority
	}
	return 0
}

// PublishStreamResponse for stream publishing
type PublishStreamResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Processed      int32                  `protobuf:"varint,1,opt,name=processed,proto3" json:"processed,omitempty"`
	Failed         int32                  `protobuf:"varint,2,opt,name=failed,proto3" json:"failed,omitempty"`
	FailedEventIds []string               `protobuf:"bytes,3,rep,name=failed_event_ids,json=failedEventIds,proto3" json:"failed_event_ids,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *PublishStreamResponse) Reset() {
	*x = PublishStreamResponse{}
	mi := &file_event_v1_event_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PublishStreamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishStreamResponse) ProtoMessage() {}

func (x *PublishStreamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_event_v1_event_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishStreamResponse.ProtoReflect.Descriptor instead.
func (*PublishStreamResponse) Descriptor() ([]byte, []int) {
	return file_event_v1_event_proto_rawDescGZIP(), []int{6}
}

func (x *PublishStreamResponse) GetProcessed() int32 {
	if x != nil {
		return x.Processed
	}
	return 0
}

func (x *PublishStreamResponse) GetFailed() int32 {
	if x != nil {
		return x.Failed
	}
	return 0
}

func (x *PublishStreamResponse) GetFailedEventIds() []string {
	if x != nil {
		return x.FailedEventIds
	}
	return nil
}

// HealthCheckRequest for health check
type HealthCheckRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Service       string                 `protobuf:"bytes,1,opt,name=service,proto3" json:"service,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthCheckRequest) Reset() {
	*x = HealthCheckRequest{}
	mi := &file_event_v1_event_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckRequest) ProtoMessage() {}

func (x *HealthCheckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_event_v1_event_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckRequest.ProtoReflect.Descriptor instead.
func (*HealthCheckRequest) Descriptor() ([]byte, []int) {
	return file_event_v1_event_proto_rawDescGZIP(), []int{7}
}

func (x *HealthCheckRequest) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

// HealthCheckResponse for health check
type HealthCheckResponse struct {
	state         protoimpl.MessageState            `protogen:"open.v1"`
	Status        HealthCheckResponse_ServingStatus `protobuf:"varint,1,opt,name=status,proto3,enum=blackhole.event.v1.HealthCheckResponse_ServingStatus" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthCheckResponse) Reset() {
	*x = HealthCheckResponse{}
	mi := &file_event_v1_event_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckResponse) ProtoMessage() {}

func (x *HealthCheckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_event_v1_event_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckResponse.ProtoReflect.Descriptor instead.
func (*HealthCheckResponse) Descriptor() ([]byte, []int) {
	return file_event_v1_event_proto_rawDescGZIP(), []int{8}
}

func (x *HealthCheckResponse) GetStatus() HealthCheckResponse_ServingStatus {
	if x != nil {
		return x.Status
	}
	return HealthCheckResponse_UNKNOWN
}

var File_event_v1_event_proto protoreflect.FileDescriptor

const file_event_v1_event_proto_rawDesc = "" +
	"\n" +
	"\x14event/v1/event.proto\x12\x12blackhole.event.v1\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x19google/protobuf/any.proto\"\xe8\x03\n" +
	"\x05Event\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04type\x18\x02 \x01(\tR\x04type\x12\x16\n" +
	"\x06source\x18\x03 \x01(\tR\x06source\x12\x1d\n" +
	"\n" +
	"process_id\x18\x04 \x01(\x05R\tprocessId\x12!\n" +
	"\fservice_name\x18\x05 \x01(\tR\vserviceName\x128\n" +
	"\ttimestamp\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12\x18\n" +
	"\aversion\x18\a \x01(\tR\aversion\x12(\n" +
	"\x04data\x18\b \x01(\v2\x14.google.protobuf.AnyR\x04data\x128\n" +
	"\bmetadata\x18\t \x01(\v2\x1c.blackhole.event.v1.MetadataR\bmetadata\x12\x19\n" +
	"\bis_local\x18\n" +
	" \x01(\bR\aisLocal\x12%\n" +
	"\x0etarget_service\x18\v \x01(\tR\rtargetService\x12#\n" +
	"\rdelivery_mode\x18\f \x01(\tR\fdeliveryMode\x12B\n" +
	"\fretry_policy\x18\r \x01(\v2\x1f.blackhole.event.v1.RetryPolicyR\vretryPolicy\"\xd2\x02\n" +
	"\bMetadata\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x1d\n" +
	"\n" +
	"session_id\x18\x02 \x01(\tR\tsessionId\x12\x19\n" +
	"\btrace_id\x18\x03 \x01(\tR\atraceId\x12\x12\n" +
	"\x04tags\x18\x04 \x03(\tR\x04tags\x12\x1a\n" +
	"\bpriority\x18\x05 \x01(\x05R\bpriority\x12\x10\n" +
	"\x03ttl\x18\x06 \x01(\x03R\x03ttl\x12\x1e\n" +
	"\n" +
	"compressed\x18\a \x01(\bR\n" +
	"compressed\x12@\n" +
	"\x06custom\x18\b \x03(\v2(.blackhole.event.v1.Metadata.CustomEntryR\x06custom\x1aO\n" +
	"\vCustomEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12*\n" +
	"\x05value\x18\x02 \x01(\v2\x14.google.protobuf.AnyR\x05value:\x028\x01\"\xbb\x01\n" +
	"\vRetryPolicy\x12!\n" +
	"\fmax_attempts\x18\x01 \x01(\x05R\vmaxAttempts\x12(\n" +
	"\x10initial_delay_ms\x18\x02 \x01(\x03R\x0einitialDelayMs\x12 \n" +
	"\fmax_delay_ms\x18\x03 \x01(\x03R\n" +
	"maxDelayMs\x12%\n" +
	"\x0ebackoff_factor\x18\x04 \x01(\x01R\rbackoffFactor\x12\x16\n" +
	"\x06jitter\x18\x05 \x01(\bR\x06jitter\"F\n" +
	"\x13PublishEventRequest\x12/\n" +
	"\x05event\x18\x01 \x01(\v2\x19.blackhole.event.v1.EventR\x05event\"e\n" +
	"\x14PublishEventResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12\x19\n" +
	"\bevent_id\x18\x03 \x01(\tR\aeventId\"\xac\x01\n" +
	"\x10SubscribeRequest\x12\x1d\n" +
	"\n" +
	"event_type\x18\x01 \x01(\tR\teventType\x12\x1f\n" +
	"\vevent_types\x18\x02 \x03(\tR\n" +
	"eventTypes\x12!\n" +
	"\fservice_name\x18\x03 \x01(\tR\vserviceName\x12\x12\n" +
	"\x04tags\x18\x04 \x03(\tR\x04tags\x12!\n" +
	"\fmin_priority\x18\x05 \x01(\x05R\vminPriority\"w\n" +
	"\x15PublishStreamResponse\x12\x1c\n" +
	"\tprocessed\x18\x01 \x01(\x05R\tprocessed\x12\x16\n" +
	"\x06failed\x18\x02 \x01(\x05R\x06failed\x12(\n" +
	"\x10failed_event_ids\x18\x03 \x03(\tR\x0efailedEventIds\".\n" +
	"\x12HealthCheckRequest\x12\x18\n" +
	"\aservice\x18\x01 \x01(\tR\aservice\"\xb5\x01\n" +
	"\x13HealthCheckResponse\x12M\n" +
	"\x06status\x18\x01 \x01(\x0e25.blackhole.event.v1.HealthCheckResponse.ServingStatusR\x06status\"O\n" +
	"\rServingStatus\x12\v\n" +
	"\aUNKNOWN\x10\x00\x12\v\n" +
	"\aSERVING\x10\x01\x12\x0f\n" +
	"\vNOT_SERVING\x10\x02\x12\x13\n" +
	"\x0fSERVICE_UNKNOWN\x10\x032\xc5\x03\n" +
	"\fEventService\x12a\n" +
	"\fPublishEvent\x12'.blackhole.event.v1.PublishEventRequest\x1a(.blackhole.event.v1.PublishEventResponse\x12N\n" +
	"\tSubscribe\x12$.blackhole.event.v1.SubscribeRequest\x1a\x19.blackhole.event.v1.Event0\x01\x12W\n" +
	"\rPublishStream\x12\x19.blackhole.event.v1.Event\x1a).blackhole.event.v1.PublishStreamResponse(\x01\x12O\n" +
	"\x13SubscribeAndPublish\x12\x19.blackhole.event.v1.Event\x1a\x19.blackhole.event.v1.Event(\x010\x01\x12X\n" +
	"\x05Check\x12&.blackhole.event.v1.HealthCheckRequest\x1a'.blackhole.event.v1.HealthCheckResponseB?Z=github.com/blackhole-pro/blackhole/core/internal/rpc/proto/event/v1b\x06proto3"

var (
	file_event_v1_event_proto_rawDescOnce sync.Once
	file_event_v1_event_proto_rawDescData []byte
)

func file_event_v1_event_proto_rawDescGZIP() []byte {
	file_event_v1_event_proto_rawDescOnce.Do(func() {
		file_event_v1_event_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_event_v1_event_proto_rawDesc), len(file_event_v1_event_proto_rawDesc)))
	})
	return file_event_v1_event_proto_rawDescData
}

var file_event_v1_event_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_event_v1_event_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_event_v1_event_proto_goTypes = []any{
	(HealthCheckResponse_ServingStatus)(0), // 0: blackhole.event.v1.HealthCheckResponse.ServingStatus
	(*Event)(nil),                          // 1: blackhole.event.v1.Event
	(*Metadata)(nil),                       // 2: blackhole.event.v1.Metadata
	(*RetryPolicy)(nil),                    // 3: blackhole.event.v1.RetryPolicy
	(*PublishEventRequest)(nil),            // 4: blackhole.event.v1.PublishEventRequest
	(*PublishEventResponse)(nil),           // 5: blackhole.event.v1.PublishEventResponse
	(*SubscribeRequest)(nil),               // 6: blackhole.event.v1.SubscribeRequest
	(*PublishStreamResponse)(nil),          // 7: blackhole.event.v1.PublishStreamResponse
	(*HealthCheckRequest)(nil),             // 8: blackhole.event.v1.HealthCheckRequest
	(*HealthCheckResponse)(nil),            // 9: blackhole.event.v1.HealthCheckResponse
	nil,                                    // 10: blackhole.event.v1.Metadata.CustomEntry
	(*timestamppb.Timestamp)(nil),          // 11: google.protobuf.Timestamp
	(*anypb.Any)(nil),                      // 12: google.protobuf.Any
}
var file_event_v1_event_proto_depIdxs = []int32{
	11, // 0: blackhole.event.v1.Event.timestamp:type_name -> google.protobuf.Timestamp
	12, // 1: blackhole.event.v1.Event.data:type_name -> google.protobuf.Any
	2,  // 2: blackhole.event.v1.Event.metadata:type_name -> blackhole.event.v1.Metadata
	3,  // 3: blackhole.event.v1.Event.retry_policy:type_name -> blackhole.event.v1.RetryPolicy
	10, // 4: blackhole.event.v1.Metadata.custom:type_name -> blackhole.event.v1.Metadata.CustomEntry
	1,  // 5: blackhole.event.v1.PublishEventRequest.event:type_name -> blackhole.event.v1.Event
	0,  // 6: blackhole.event.v1.HealthCheckResponse.status:type_name -> blackhole.event.v1.HealthCheckResponse.ServingStatus
	12, // 7: blackhole.event.v1.Metadata.CustomEntry.value:type_name -> google.protobuf.Any
	4,  // 8: blackhole.event.v1.EventService.PublishEvent:input_type -> blackhole.event.v1.PublishEventRequest
	6,  // 9: blackhole.event.v1.EventService.Subscribe:input_type -> blackhole.event.v1.SubscribeRequest
	1,  // 10: blackhole.event.v1.EventService.PublishStream:input_type -> blackhole.event.v1.Event
	1,  // 11: blackhole.event.v1.EventService.SubscribeAndPublish:input_type -> blackhole.event.v1.Event
	8,  // 12: blackhole.event.v1.EventService.Check:input_type -> blackhole.event.v1.HealthCheckRequest
	5,  // 13: blackhole.event.v1.EventService.PublishEvent:output_type -> blackhole.event.v1.PublishEventResponse
	1,  // 14: blackhole.event.v1.EventService.Subscribe:output_type -> blackhole.event.v1.Event
	7,  // 15: blackhole.event.v1.EventService.PublishStream:output_type -> blackhole.event.v1.PublishStreamResponse
	1,  // 16: blackhole.event.v1.EventService.SubscribeAndPublish:output_type -> blackhole.event.v1.Event
	9,  // 17: blackhole.event.v1.EventService.Check:output_type -> blackhole.event.v1.HealthCheckResponse
	13, // [13:18] is the sub-list for method output_type
	8,  // [8:13] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_event_v1_event_proto_init() }
func file_event_v1_event_proto_init() {
	if File_event_v1_event_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_event_v1_event_proto_rawDesc), len(file_event_v1_event_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_event_v1_event_proto_goTypes,
		DependencyIndexes: file_event_v1_event_proto_depIdxs,
		EnumInfos:         file_event_v1_event_proto_enumTypes,
		MessageInfos:      file_event_v1_event_proto_msgTypes,
	}.Build()
	File_event_v1_event_proto = out.File
	file_event_v1_event_proto_goTypes = nil
	file_event_v1_event_proto_depIdxs = nil
}
